{"version":3,"sources":["Canvas.re","index.re","app.re","XorCanvas.re","Bits.re","ImageGenerator.re","serviceWorker.js"],"names":["Curry","__webpack_require__","React","Caml_array","Caml_int32","Ctx","ctx","v","mozImageSmoothingEnabled","oImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","imageSmoothingEnabled","Util","w","h","f","imageData","createImageData","rawData","data","y","y_finish","x","x_finish","offset","imul","match","_2","caml_array_set","component","statelessComponent","exports","make","setRef","width","height","_","createElement","ref","toString","App","ReactDOMRe","ReasonReact","ServiceWorker","renderToElementWithId","element","undefined","unregister","XorCanvas","className","Bits","Canvas","Js_primitive","Belt_MapString","Caml_primitive","ImageGenerator","addToMap","key","map","theRef","set","setCanvasRef","param","state","some","valFromOption","getContext","alpha","fillStyle","fillRect","transformCanvas","canvas","getImageData","_1","putImageData","rotate","param$1","b","g","r","rawNew","i","i_finish","length","caml_array_get","rotateL","param$2","param$3","circShiftL","rotateR","circShiftR","setHref","el","href","draw","imageKey","match$1","get","rawOld","n","drawImage","caml_int_max","render","name","onClick","$staropt$star","$staropt$star$1","outerStyle","innerStyle","transform","transformOrigin","style","Clickable","component$1","reducerComponent","self","display","left","position","zIndex","flexDirection","justifyContent","fontSize","background","border","color","padding","textAlign","textDecoration","download","evt","target","dataURL","toDataURL","top","flexWrap","Img","partial_arg","Fill","Circle","XorTexture","GBGamut","RBGamut","RGGamut","XorFractal","PseudoRandom","empty","_$1","mask","value","count","count$1","Random","Pervasives","src","onload","StaticCanvas","_3","_$2","_$3","input","component$2","f$1","draw$1","component$3","f$2","draw$2","component$4","f$3","radius","centerX","centerY","radiusSquared","cX","cY","abs","draw$3","component$5","f$4","draw$4","component$6","f$5","draw$5","component$7","f$6","draw$6","component$8","f$7","init","$$int","draw$7","component$9","f$8","draw$8","component$10","PseudoRandomGray","Make","ProgrammaticImage","__webpack_exports__","d","register","isLocalhost","Boolean","window","location","hostname","config","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","then","response","status","headers","indexOf","serviceWorker","ready","registration","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error"],"mappings":"yFAGA,IAAAA,EAAYC,EAAQ,GACpBC,EAAYD,EAAQ,GACpBE,EAAiBF,EAAQ,GACzBG,EAAiBH,EAAQ,GAWzBI,EAAA,CARA,SAAAC,EAAAC,GACAD,EAAAE,yBAAAD,EACAD,EAAAG,uBAAAF,EACAD,EAAAI,4BAAAH,EACAD,EAAAK,wBAAAJ,EACAD,EAAAM,sBAAAL,IAqBA,IAAAM,EAAA,CAhBA,SAAAP,EAAAQ,EAAAC,EAAAC,GAGA,IAFA,IAAAC,EAAAX,EAAAY,gBAAAJ,EAAAC,GACAI,EAAAF,EAAAG,KACAC,EAAA,EAAAC,EAAAP,EAAA,IAAsCM,GAAAC,IAAeD,EACrD,QAAAE,EAAA,EAAAC,EAAAV,EAAA,IAAwCS,GAAAC,IAAeD,EAAA,CACvD,IAAAE,EAAArB,EAAAsB,KAAAL,EAAAP,GAAA,IAAAS,GAAA,KACAI,EAAA3B,EAAA4B,GAAAZ,EAAAO,EAAAF,GACAlB,EAAA0B,eAAAV,EAAAM,EAAAE,EAAA,IACAxB,EAAA0B,eAAAV,EAAAM,EAAA,IAAAE,EAAA,IACAxB,EAAA0B,eAAAV,EAAAM,EAAA,IAAAE,EAAA,IACAxB,EAAA0B,eAAAV,EAAAM,EAAA,IAAAE,EAAA,IAGA,OAAAV,IAKAa,EA9BkB7B,EAAQ,GA8B1B8B,mBAAA,UA2BAC,EAAA3B,MACA2B,EAAAnB,OACAmB,EAAAF,YACAE,EAAAC,KA5BA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,OACAP,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAA5B,EAAAoC,cAAA,UACAC,IAAAL,EACAE,SAAAI,WACAL,QAAAK,cAGAV,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,2ECzDA,IAAAW,EAAUxC,EAAQ,IAClByC,EAAiBzC,EAAQ,IACzB0C,EAAkB1C,EAAQ,GAC1B2C,EAAoB3C,EAAQ,IAE1BA,EAAQ,IAEVyC,EAAAG,sBAAAF,EAAAG,aAAAC,SAAAN,EAAAR,KAAA,aAEAW,EAAAI,8CCTA,IAAA9C,EAAYD,EAAQ,GACpBgD,EAAgBhD,EAAQ,IACxB0C,EAAkB1C,EAAQ,GAExBA,EAAQ,IAEV,IAAA6B,EAAAa,EAAAZ,mBAAA,OAyBAC,EAAAF,YACAE,EAAAC,KAxBA,WACA,OACAH,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAA5B,EAAAoC,cAAA,OACAY,UAAA,OACyBP,EAAAG,aAAAC,SAAAE,EAAAhB,UAAAc,SAAA,OAEzBjB,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,uCC3BA,IAAAqB,EAAWlD,EAAQ,IACnBD,EAAYC,EAAQ,GACpBC,EAAYD,EAAQ,GACpBmD,EAAanD,EAAQ,IACrBE,EAAiBF,EAAQ,GACzB0C,EAAkB1C,EAAQ,GAC1BoD,EAAmBpD,EAAQ,GAC3BqD,EAAqBrD,EAAQ,IAC7BsD,EAAqBtD,EAAQ,GAC7BuD,EAAqBvD,EAAQ,IAE7B,SAAAwD,EAAAC,EAAAC,EAAAC,GACA,aAAAA,EACA,GAEAD,EAAA,GAAAL,EAAAO,IAAAF,EAAA,GAAAD,EAAAE,GACA,GAIA,SAAAE,EAAA3B,EAAAC,EAAAwB,EAAAG,GACA,IAAAC,EAAAD,EAAA,GACAC,EAAA,YAAAJ,OAAAb,EAAAM,EAAAY,KAAAL,GACAH,EAAA,OAAAO,EAAA,GAAAJ,GACA,IAAAjC,EAAAqC,EAAA,MACA,QAAAjB,IAAApB,EAAA,CACA,IAAArB,EAAA+C,EAAAa,cAAAvC,GAAAwC,WAAA,MACAC,OAAA,IAKA,OAHAhB,EAAA/C,IAAA,GAAAC,GAAA,GACAA,EAAA+D,UAAA,QACA/D,EAAAgE,SAAA,IAAAnC,EAAAC,GACA,EAEA,SAIA,SAAAmC,EAAAvD,EAAAmB,EAAAC,EAAAoC,GACA,IAAAlE,EAAAkE,EAAAL,WAAA,MACAlD,EAAAX,EAAAmE,aAAA,IAAAtC,EAAAC,GAGA,OAFApC,EAAA0E,GAAA1D,EAAAC,EAAAG,MACAd,EAAAqE,aAAA1D,EAAA,KACA,EAGA,SAAA2D,EAAA5D,EAAAmB,EAAAC,EAAA2B,EAAAc,GACA,IAAAC,EAAAf,EAAA,GACAgB,EAAAhB,EAAA,GACAiB,EAAAjB,EAAA,GACApC,EAAAkD,EAAA,SACA,YAAA9B,IAAApB,EACA4C,EAAA,SAAAU,GAEA,IADA,IACAC,EAAA,EAAAC,GADAF,EAAAG,OAAA,KACA,IAAsDF,GAAAC,IAAeD,EAAA,CACrE,IAAAzD,EAAAyD,GAAA,EACA/E,EAAA0B,eAAAoD,EAAAxD,EAAAzB,EAAA4B,GAAAZ,EAAAb,EAAAkF,eAAAJ,EAAAxD,GAAAuD,IACA7E,EAAA0B,eAAAoD,EAAAxD,EAAA,IAAAzB,EAAA4B,GAAAZ,EAAAb,EAAAkF,eAAAJ,EAAAxD,EAAA,KAAAsD,IACA5E,EAAA0B,eAAAoD,EAAAxD,EAAA,IAAAzB,EAAA4B,GAAAZ,EAAAb,EAAAkF,eAAAJ,EAAAxD,EAAA,KAAAqD,IAEA,UACiB3C,EAAAC,EAAAiB,EAAAa,cAAAvC,IAEjB,EAIA,SAAA2D,EAAAvB,EAAAc,EAAAU,EAAAC,GACA,OAAAZ,EAAAzB,EAAAsC,WAAA1B,EAAAc,EAAAU,EAAAC,GAGA,SAAAE,EAAA3B,EAAAc,EAAAU,EAAAC,GACA,OAAAZ,EAAAzB,EAAAwC,WAAA5B,EAAAc,EAAAU,EAAAC,GAGA,IAAAI,EAAA,SAAAC,EAAAtF,GAA8BsF,EAAAC,KAAAvF,GAE9B,SAAAwF,EAAA5D,EAAAC,EAAA4D,EAAAjC,GACA,IAAAC,EAAAD,EAAA,GACApC,EAAAqC,EAAA,MACAiC,EAAA3C,EAAA4C,IAAAlC,EAAA,MAAAgC,GACA,QAAAjD,IAAApB,QAAAoB,IAAAkD,EAAA,CACA,IAAAzB,EAAAnB,EAAAa,cAAAvC,GACArB,EAAAkE,EAAAL,WAAA,MACAlD,EAAAX,EAAAmE,aAAA,IAAAtC,EAAAC,GACA+D,EAAAlF,EAAAG,KACAgF,EAAAnF,EAAAG,KAAAgE,OAAA,IAEA,OADA9E,EAAA+F,UAAAhD,EAAAa,cAAA+B,GAAA,IAAA9D,EAAAC,GACAmC,EAAA,SAAAU,GACA,QAAAC,EAAA,EAAAC,EAAAiB,EAAA,IAAsDlB,GAAAC,IAAeD,EAAA,CACrE,IAAAzD,EAAAyD,GAAA,EACA/E,EAAA0B,eAAAoD,EAAAxD,EAAAtB,EAAAkF,eAAAc,EAAA1E,GAAAtB,EAAAkF,eAAAJ,EAAAxD,IACAtB,EAAA0B,eAAAoD,EAAAxD,EAAA,IAAAtB,EAAAkF,eAAAc,EAAA1E,EAAA,KAAAtB,EAAAkF,eAAAJ,EAAAxD,EAAA,MACAtB,EAAA0B,eAAAoD,EAAAxD,EAAA,IAAAtB,EAAAkF,eAAAc,EAAA1E,EAAA,KAAAtB,EAAAkF,eAAAJ,EAAAxD,EAAA,MACAtB,EAAA0B,eAAAoD,EAAAxD,EAAA,IAAA8B,EAAA+C,aAAAnG,EAAAkF,eAAAc,EAAA1E,EAAA,KAAAtB,EAAAkF,eAAAJ,EAAAxD,EAAA,OAEA,UACiBU,EAAAC,EAAAoC,GAEjB,SAIA,IAAA1C,EAAAa,EAAAZ,mBAAA,aAEA,SAAAE,EAAAsE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtE,GACA,IAAAuE,OAAA7D,IAAA2D,EAAArD,EAAAa,cAAAwC,GAAA,CACAtE,OAAA,QACAD,MAAA,SAEA0E,OAAA9D,IAAA4D,EAAAtD,EAAAa,cAAAyC,GAAA,CACAG,UAAA,aACAC,gBAAA,YAEA,OACAjF,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAA5B,EAAAoC,cAAA,OACA0E,MAAAJ,EACAH,QAAA,WACA,OAAAzG,EAAA0E,GAAA+B,EAAAD,KAEyBtG,EAAAoC,cAAA,OACzB0E,MAAAH,GAC6B7G,EAAA0E,GAAA6B,EAAAC,MAE7B1E,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,KAIA,IAAAmF,EAAA,CACAnF,EACAG,GAGAiF,EAAAvE,EAAAwE,iBAAA,aA6QAnF,EAAAyB,WACAzB,EAAA8B,eACA9B,EAAAuC,kBACAvC,EAAA4C,SACA5C,EAAAsD,UACAtD,EAAA0D,UACA1D,EAAA4D,UACA5D,EAAA+D,OACA/D,EAAAiF,YACAjF,EAAAF,UAAAoF,EACAlF,EAAAC,KArRA,SAAAyE,EAAAC,EAAAtE,GACA,IAAAF,OAAAY,IAAA2D,IAAA,IACAtE,OAAAW,IAAA4D,IAAA,IACA,OACAO,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,SAAAE,GACA,IAAAX,EAAA,SAAAD,GACA,OAAAT,EAAA5D,EAAAC,EAAAoE,EAAAY,IAEA,OAAAlH,EAAAoC,cAAA,WAAAS,EAAA7C,EAAAoC,cAAA,OACA0E,MAAA,CACAK,QAAA,OACAC,KAAA,MACAC,SAAA,QACApF,MAAA,QACAqF,OAAA,IACAC,cAAA,SACAC,eAAA,gBACAZ,UAAA,qBAE6BnE,EAAAG,aAAAC,SAAAd,EAAA,WAC7B,OAAA/B,EAAAoC,cAAA,UACAC,IAAAvC,EAAA0E,GAAA0C,EAAA,YAAArD,EAAAc,GACA,OAAAf,EAAA3B,EAAAC,EAAA2B,EAAAc,KAEAzC,SAAAI,WACAL,QAAAK,cAEuC,OAAAiE,EAAA,GAAuB,KAAKvG,EAAAoC,cAAA,OACnE0E,MAAA,CACAK,QAAA,OACAM,SAAA,OACAF,cAAA,MACAC,eAAA,kBAEiCxH,EAAAoC,cAAA,UACjC0E,MAAA,CACAY,WAAA,QACAC,OAAA,kBACAC,MAAA,QACAH,SAAA,OACAI,QAAA,MACAC,UAAA,SACA7F,MAAA,QAEAsE,QAAA,WACA,OAAAnB,EAAAnD,EAAAC,EAAA,CACA,EACA,EACA,GACAgF,KAEqC,UAAAlH,EAAAoC,cAAA,KACrC0E,MAAA,CACAY,WAAA,QACAC,OAAA,kBACAC,MAAA,QACAE,UAAA,SACAC,eAAA,OACA9F,MAAA,QAEA+F,SAAA,eACAzB,QAAA,SAAA0B,GACA,IAAAxG,EAAAyF,EAAA,SACA,QAAArE,IAAApB,EAAA,CACA,IAAAkE,EAAAsC,EAAAC,OACAC,EAAAhF,EAAAa,cAAAvC,GAAA2G,UAAA,aACA,OAAA1C,EAAAC,EAAAwC,GAEA,WAGqC,UAAAnI,EAAAoC,cAAA,UACrC0E,MAAA,CACAY,WAAA,QACAC,OAAA,kBACAC,MAAA,QACAH,SAAA,OACAI,QAAA,MACAC,UAAA,SACA7F,MAAA,QAEAsE,QAAA,WACA,OAAAf,EAAAvD,EAAAC,EAAA,CACA,EACA,EACA,GACAgF,KAEqC,YAAAlH,EAAAoC,cAAA,OACrC0E,MAAA,CACAO,SAAA,WACAgB,IAAA,UAE6BrI,EAAAoC,cAAA,OAC7B0E,MAAA,CACAK,QAAA,OACAI,cAAA,MACAe,SAAA,OACAd,eAAA,WAEiC/E,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GACjC,OAAA7D,EAAAG,aAAAC,SAAAS,EAAAiF,IAAA,YAAA7E,GACAH,EAAA+C,EAAAY,EAAA,MAAAxD,GACA,IAAAjC,EAAAyF,EAAA,SACA,YAAArE,IAAApB,GAAA,MAAAiC,GACAP,EAAAa,cAAAvC,GAAAwC,WAAA,MACAkC,UAAAzC,EAAA,KACA,GAEA,GAE6D,kBAAAzB,EAAAC,EAAA,MAClB,OAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAmF,KAAA,YAAA5E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,CAC7D,GACA,GACA,IACA,MAC2C,UAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAmF,KAAA,YAAA5E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,CAC7D,IACA,IACA,KACA,MAC2C,UAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAmF,KAAA,YAAA5E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,CAC7D,IACA,IACA,KACA,MAC2C,UAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAmF,KAAA,YAAA5E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,CAC7D,IACA,IACA,KACA,MAC2C,QAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAoF,OAAA,YAAA7E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,CAC7D,GACA,CACA,IACA,IACA,MAEA,MAC2C,eAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAqF,WAAA,YAAA9E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,QAClB,cAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAmF,KAAA,YAAA5E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,CAC7D,IACA,EACA,GACA,MAC2C,MAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAmF,KAAA,YAAA5E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,CAC7D,EACA,IACA,GACA,MAC2C,QAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAmF,KAAA,YAAA5E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,CAC7D,EACA,EACA,KACA,MAC2C,OAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAsF,QAAA,YAAA/E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,UAClB,KAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAuF,QAAA,YAAAhF,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,UAClB,KAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAwF,QAAA,YAAAjF,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,UAClB,KAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAyF,WAAA,YAAAlF,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,QAClB,cAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAiF,IAAA,YAAA1E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D,2BAAA5B,EAAAC,EAAA,MAClB,SAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAiF,IAAA,YAAA1E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D,6BAAA5B,EAAAC,EAAA,MAClB,OAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAiF,IAAA,YAAA1E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D,sBAAA5B,EAAAC,EAAA,MAClB,WAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAA0F,aAAA,YAAAnF,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D5B,EAAAC,EAAA,QAClB,aAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAiF,IAAA,YAAA1E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D,oCAAA5B,EAAAC,EAAA,MAClB,iBAAAqE,OAAA1D,WAAAJ,EAAAG,aAAAC,SAAAd,EAAA,SAAAuE,GAC3C,IAAAkC,EAAAtB,EAAA,MACA,OAAAzE,EAAAG,aAAAC,SAAAS,EAAAiF,IAAA,YAAA1E,GACA,OAAAN,EAAA+C,EAAAkC,EAAA3E,IAC6D,4BAAA5B,EAAAC,EAAA,MAClB,iBAAAqE,OAAA1D,eAE3C,WACA,OACA,MAAAA,GACA,CAAAO,EAAA6F,SAGAjC,EAAA,IACA,SAAA7E,EAAA+G,GACA,UAEAlC,EAAA,uCC9YAlF,EAAAqH,KAFA,EAGArH,EAAAyD,WAbA,SAAA6D,EAAAC,GACA,IAAAC,EAAA,EAAAD,EACA,OAAAD,GAAAE,EAAA,IAAAF,KAAA,GAAAE,GAAA,KAYAxH,EAAA2D,WATA,SAAA2D,EAAAC,GACA,IAAAC,EAAA,EAAAD,EACA,OAAAD,IAAAE,EAAA,IAAAF,IAAA,GAAAE,GAAA,sCCRA,IAAAxJ,EAAYC,EAAQ,GACpBC,EAAYD,EAAQ,GACpBmD,EAAanD,EAAQ,IACrBwJ,EAAaxJ,EAAQ,IACrBG,EAAiBH,EAAQ,GACzByJ,EAAiBzJ,EAAQ,IACzB0C,EAAkB1C,EAAQ,GA8C1B,IAAA6B,EAAAa,EAAAZ,mBAAA,OAqCA,IAAA0G,EAAA,CACA3G,EApCA,SAAAI,EAAAyH,EAAAxH,EAAAC,EAAAC,GACA,OACAP,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAA5B,EAAAoC,cAAA,OACAC,IAAA,SAAAqB,GACA,aAAAA,EACA,GAEAA,EAAAgG,OAAA,WACA,OAAA5J,EAAA0E,GAAAxC,EAAA0B,IAEA,IAGAxB,SAAAI,WACAmH,MACAxH,QAAAK,cAGAV,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,OASAoF,EAAAvE,EAAAZ,mBAAA,gBAkCA,IAAA8H,EAAA,CACA3C,EAjCA,SAAAhF,EAAA6D,EAAA5D,EAAAC,EAAAC,GACA,OACA6E,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAAhH,EAAAoC,cAAA,UACAC,IAAA,SAAAqB,GACA,aAAAA,EACA,GAEA5D,EAAA8J,GAAA/D,EAAA5D,EAAAC,EAAAwB,GACA5D,EAAA0E,GAAAxC,EAAA0B,KAGAxB,SAAAI,WACAL,QAAAK,cAGA0E,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,OASA,SAAAlG,EAAA+C,EAAA1B,EAAA+G,EAAAW,EAAAC,GACA,OACAjG,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,KAIA,SAAAgC,EAAAkE,EAAA9H,EAAAC,EAAAwB,GACA,SAAAA,EACA,SAEA,IAAAtD,EAAAsD,EAAAO,WAAA,MACAlD,EAAAmC,EAAAvC,KAAA,GAAAP,EAAA6B,EAAAC,EAAA,SAAA2B,EAAAc,GACA,OAAA7D,EAAAiJ,KAGA,OADA3J,EAAAqE,aAAA1D,EAAA,KACA,EAIA,IAAAiJ,EAAAvH,EAAAZ,mBAAA,qBA0BA,IAAA4G,EAAA,CACA3H,EACA+E,EACAmE,EA3BA,SAAAhI,EAAAC,EAAAC,EAAA6H,EAAA5H,GACA,OACA6H,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAAvH,EAAAG,aAAAC,SAAAK,EAAAnB,KAAA,SAAA2B,GAEA,OADAmC,EAAAkE,EAAA9H,EAAAC,EAAAwB,GACA5D,EAAA0E,GAAAxC,EAAA0B,IAC+BzB,EAAAC,EAAA,MAE/B8H,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,OAWA,SAAAC,EAAA9H,EAAA+G,EAAAW,EAAAxI,EAAAF,GACA,IAAAd,EAAAgB,EAAAF,EACA,OACAd,EACAA,EACAA,EACA,KAIA,SAAA6J,EAAAH,EAAA9H,EAAAC,EAAAwB,GACA,SAAAA,EACA,SAEA,IAAAtD,EAAAsD,EAAAO,WAAA,MACAlD,EAAAmC,EAAAvC,KAAA,GAAAP,EAAA6B,EAAAC,EAAA,SAAA2B,EAAAc,GACA,OAAAsF,EAAAF,EAAA9H,EAAAC,EAAA2B,EAAAc,KAGA,OADAvE,EAAAqE,aAAA1D,EAAA,KACA,EAIA,IAAAoJ,EAAA1H,EAAAZ,mBAAA,qBA0BA,IAAA8G,EAAA,CACAsB,EACAC,EACAC,EA3BA,SAAAnI,EAAAC,EAAAC,EAAA6H,EAAA5H,GACA,OACAgI,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAA1H,EAAAG,aAAAC,SAAAK,EAAAnB,KAAA,SAAA2B,GAEA,OADAwG,EAAAH,EAAA9H,EAAAC,EAAAwB,GACA5D,EAAA0E,GAAAxC,EAAA0B,IAC+BzB,EAAAC,EAAA,MAE/BiI,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,OAWA,SAAAC,EAAAjI,EAAA+G,EAAAW,EAAAxI,EAAAF,GACA,IAAAd,GAAAgB,EAAAF,GAAA,EACA,GAAAd,EAAA,GAAAA,EAAA,EACA,OACA,IACA,IACA,GACA,KAGA,OAAAA,GACA,OACA,OACA,GACA,IACA,IACA,KAEA,OACA,OACA,IACA,GACA,IACA,KAEA,OACA,OACA,IACA,IACA,GACA,MAOA,SAAAgK,EAAAN,EAAA9H,EAAAC,EAAAwB,GACA,SAAAA,EACA,SAEA,IAAAtD,EAAAsD,EAAAO,WAAA,MACAlD,EAAAmC,EAAAvC,KAAA,GAAAP,EAAA6B,EAAAC,EAAA,SAAA2B,EAAAc,GACA,OAAAyF,EAAAL,EAAA9H,EAAAC,EAAA2B,EAAAc,KAGA,OADAvE,EAAAqE,aAAA1D,EAAA,KACA,EAIA,IAAAuJ,EAAA7H,EAAAZ,mBAAA,qBA0BA,IAAAkH,EAAA,CACAqB,EACAC,EACAC,EA3BA,SAAAtI,EAAAC,EAAAC,EAAA6H,EAAA5H,GACA,OACAmI,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAA7H,EAAAG,aAAAC,SAAAK,EAAAnB,KAAA,SAAA2B,GAEA,OADA2G,EAAAN,EAAA9H,EAAAC,EAAAwB,GACA5D,EAAA0E,GAAAxC,EAAA0B,IAC+BzB,EAAAC,EAAA,MAE/BoI,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,OAWA,SAAAC,EAAA1G,EAAA5B,EAAAC,EAAAb,EAAAF,GACA,IAAAM,EAAAoC,EAAA,GACA2G,EAAA3G,EAAA,GACA4G,EAAAxI,EAAA,IACAyI,EAAAxI,EAAA,IACAyI,EAAAzK,EAAAsB,KAAAgJ,KACAI,EAAAvJ,EAAAoJ,EAAA,EACAI,EAAA1J,EAAAuJ,EAAA,EAEA,OADAlB,EAAAsB,KAAA5K,EAAAsB,KAAAoJ,KAAA1K,EAAAsB,KAAAqJ,KAAA,GAAAF,EAAA,GAAAH,EAEA,CACA/I,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,KAGA,CACA,EACA,EACA,EACA,KAKA,SAAAsJ,EAAAhB,EAAA9H,EAAAC,EAAAwB,GACA,SAAAA,EACA,SAEA,IAAAtD,EAAAsD,EAAAO,WAAA,MACAlD,EAAAmC,EAAAvC,KAAA,GAAAP,EAAA6B,EAAAC,EAAA,SAAA2B,EAAAc,GACA,OAAA4F,EAAAR,EAAA9H,EAAAC,EAAA2B,EAAAc,KAGA,OADAvE,EAAAqE,aAAA1D,EAAA,KACA,EAIA,IAAAiK,EAAAvI,EAAAZ,mBAAA,qBA0BA,IAAA6G,EAAA,CACA6B,EACAQ,EACAC,EA3BA,SAAAhJ,EAAAC,EAAAC,EAAA6H,EAAA5H,GACA,OACA6I,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAAvI,EAAAG,aAAAC,SAAAK,EAAAnB,KAAA,SAAA2B,GAEA,OADAqH,EAAAhB,EAAA9H,EAAAC,EAAAwB,GACA5D,EAAA0E,GAAAxC,EAAA0B,IAC+BzB,EAAAC,EAAA,MAE/B8I,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,OAWA,SAAAC,EAAAlB,EAAA5H,EAAA+G,EAAA7H,EAAAF,GACA,OACAE,EACAF,EACA4I,EACA,KAIA,SAAAmB,EAAAnB,EAAA9H,EAAAC,EAAAwB,GACA,SAAAA,EACA,SAEA,IAAAtD,EAAAsD,EAAAO,WAAA,MACAlD,EAAAmC,EAAAvC,KAAA,GAAAP,EAAA6B,EAAAC,EAAA,SAAA2B,EAAAc,GACA,OAAAsG,EAAAlB,EAAA9H,EAAAC,EAAA2B,EAAAc,KAGA,OADAvE,EAAAqE,aAAA1D,EAAA,KACA,EAIA,IAAAoK,EAAA1I,EAAAZ,mBAAA,qBA0BA,IAAAiH,EAAA,CACAmC,EACAC,EACAC,EA3BA,SAAAnJ,EAAAC,EAAAC,EAAA6H,EAAA5H,GACA,OACAgJ,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAA1I,EAAAG,aAAAC,SAAAK,EAAAnB,KAAA,SAAA2B,GAEA,OADAwH,EAAAnB,EAAA9H,EAAAC,EAAAwB,GACA5D,EAAA0E,GAAAxC,EAAA0B,IAC+BzB,EAAAC,EAAA,MAE/BiJ,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,OAWA,SAAAC,EAAArB,EAAA5H,EAAA+G,EAAA7H,EAAAF,GACA,OACAE,EACA0I,EACA5I,EACA,KAIA,SAAAkK,EAAAtB,EAAA9H,EAAAC,EAAAwB,GACA,SAAAA,EACA,SAEA,IAAAtD,EAAAsD,EAAAO,WAAA,MACAlD,EAAAmC,EAAAvC,KAAA,GAAAP,EAAA6B,EAAAC,EAAA,SAAA2B,EAAAc,GACA,OAAAyG,EAAArB,EAAA9H,EAAAC,EAAA2B,EAAAc,KAGA,OADAvE,EAAAqE,aAAA1D,EAAA,KACA,EAIA,IAAAuK,EAAA7I,EAAAZ,mBAAA,qBA0BA,IAAAgH,EAAA,CACAuC,EACAC,EACAC,EA3BA,SAAAtJ,EAAAC,EAAAC,EAAA6H,EAAA5H,GACA,OACAmJ,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAA7I,EAAAG,aAAAC,SAAAK,EAAAnB,KAAA,SAAA2B,GAEA,OADA2H,EAAAtB,EAAA9H,EAAAC,EAAAwB,GACA5D,EAAA0E,GAAAxC,EAAA0B,IAC+BzB,EAAAC,EAAA,MAE/BoJ,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,OAWA,SAAAC,EAAAxB,EAAA5H,EAAA+G,EAAA7H,EAAAF,GACA,OACA4I,EACA1I,EACAF,EACA,KAIA,SAAAqK,EAAAzB,EAAA9H,EAAAC,EAAAwB,GACA,SAAAA,EACA,SAEA,IAAAtD,EAAAsD,EAAAO,WAAA,MACAlD,EAAAmC,EAAAvC,KAAA,GAAAP,EAAA6B,EAAAC,EAAA,SAAA2B,EAAAc,GACA,OAAA4G,EAAAxB,EAAA9H,EAAAC,EAAA2B,EAAAc,KAGA,OADAvE,EAAAqE,aAAA1D,EAAA,KACA,EAIA,IAAA0K,EAAAhJ,EAAAZ,mBAAA,qBA0BA,IAAA+G,EAAA,CACA2C,EACAC,EACAC,EA3BA,SAAAzJ,EAAAC,EAAAC,EAAA6H,EAAA5H,GACA,OACAsJ,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAAhJ,EAAAG,aAAAC,SAAAK,EAAAnB,KAAA,SAAA2B,GAEA,OADA8H,EAAAzB,EAAA9H,EAAAC,EAAAwB,GACA5D,EAAA0E,GAAAxC,EAAA0B,IAC+BzB,EAAAC,EAAA,MAE/BuJ,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,OAWA,SAAAC,EAAA3B,EAAA5H,EAAA+G,EAAA7H,EAAAF,GAIA,OAHA,IAAAE,GAAA,IAAAF,GACAoI,EAAAoC,KAAA5B,GAEA,CACAR,EAAAqC,MAAA,KACArC,EAAAqC,MAAA,KACArC,EAAAqC,MAAA,KACA,KAIA,SAAAC,EAAA9B,EAAA9H,EAAAC,EAAAwB,GACA,SAAAA,EACA,SAEA,IAAAtD,EAAAsD,EAAAO,WAAA,MACAlD,EAAAmC,EAAAvC,KAAA,GAAAP,EAAA6B,EAAAC,EAAA,SAAA2B,EAAAc,GACA,OAAA+G,EAAA3B,EAAA9H,EAAAC,EAAA2B,EAAAc,KAGA,OADAvE,EAAAqE,aAAA1D,EAAA,KACA,EAIA,IAAA+K,EAAArJ,EAAAZ,mBAAA,qBA0BA,IAAAmH,EAAA,CACA0C,EACAG,EACAC,EA3BA,SAAA9J,EAAAC,EAAAC,EAAA6H,EAAA5H,GACA,OACA2J,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAArJ,EAAAG,aAAAC,SAAAK,EAAAnB,KAAA,SAAA2B,GAEA,OADAmI,EAAA9B,EAAA9H,EAAAC,EAAAwB,GACA5D,EAAA0E,GAAAxC,EAAA0B,IAC+BzB,EAAAC,EAAA,MAE/B4J,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,OAWA,SAAAC,EAAAhC,EAAA5H,EAAA+G,EAAA7H,EAAAF,GACA,IAAAE,GAAA,IAAAF,GACAoI,EAAAoC,KAAA5B,GAEA,IAAA1J,EAAAkJ,EAAAqC,MAAA,KACA,OACAvL,EACAA,EACAA,EACA,KAIA,SAAA2L,EAAAjC,EAAA9H,EAAAC,EAAAwB,GACA,SAAAA,EACA,SAEA,IAAAtD,EAAAsD,EAAAO,WAAA,MACAlD,EAAAmC,EAAAvC,KAAA,GAAAP,EAAA6B,EAAAC,EAAA,SAAA2B,EAAAc,GACA,OAAAoH,EAAAhC,EAAA9H,EAAAC,EAAA2B,EAAAc,KAGA,OADAvE,EAAAqE,aAAA1D,EAAA,KACA,EAIA,IAAAkL,EAAAxJ,EAAAZ,mBAAA,qBA0BA,IAAAqK,EAAA,CACAH,EACAC,EACAC,EA3BA,SAAAjK,EAAAC,EAAAC,EAAA6H,EAAA5H,GACA,OACA8J,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAAxJ,EAAAG,aAAAC,SAAAK,EAAAnB,KAAA,SAAA2B,GAEA,OADAsI,EAAAjC,EAAA9H,EAAAC,EAAAwB,GACA5D,EAAA0E,GAAAxC,EAAA0B,IAC+BzB,EAAAC,EAAA,MAE/B+J,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,OAWAnK,EAAAqK,KAjqBA,SAAAC,GACA,IAAAtL,EAAAsL,EAAA,GACAvG,EAAA,SAAAkE,EAAA9H,EAAAC,EAAAwB,GACA,SAAAA,EACA,SAEA,IAAAtD,EAAAsD,EAAAO,WAAA,MACAlD,EAAAmC,EAAAvC,KAAA,GAAAP,EAAA6B,EAAAC,EAAApC,EAAA8J,GAAA9I,EAAAiJ,EAAA9H,EAAAC,IAEA,OADA9B,EAAAqE,aAAA1D,EAAA,KACA,GAGAa,EAAAa,EAAAZ,mBAAA,qBAwBA,OACAf,EACA+E,EACAjE,EA1BA,SAAAI,EAAAC,EAAAC,EAAA6H,EAAA5H,GACA,OACAP,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA,WACA,OAAAa,EAAAG,aAAAC,SAAAK,EAAAnB,KAAA,SAAA2B,GAEA,OADAmC,EAAAkE,EAAA9H,EAAAC,EAAAwB,GACA5D,EAAA0E,GAAAxC,EAAA0B,IACiCzB,EAAAC,EAAA,MAEjCN,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,QAioBAE,EAAAyG,MACAzG,EAAA6H,eACA7H,EAAA2G,OACA3G,EAAA6G,aACA7G,EAAAiH,aACAjH,EAAA4G,SACA5G,EAAAgH,UACAhH,EAAA+G,UACA/G,EAAA8G,UACA9G,EAAAkH,eACAlH,EAAAoK,yECvrBAnM,EAAA+E,EAAAuH,GAAAtM,EAAAuM,EAAAD,EAAA,6BAAAE,IAAAxM,EAAAuM,EAAAD,EAAA,+BAAAvJ,IAUA,IAAM0J,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnL,MACvB,2DAIC,SAAS8K,EAASM,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIC,IAAIC,GAAwBN,OAAOC,UAC3CM,SAAWP,OAAOC,SAASM,OAIvC,OAGFP,OAAOQ,iBAAiB,OAAQ,WAC9B,IAAMC,EAAK,GAAAC,OAAMJ,GAAN,sBAEPR,IA2DV,SAAiCW,EAAON,GAEtCQ,MAAMF,GACHG,KAAK,SAAAC,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQzH,IAAI,gBAAgB0H,QAAQ,cAG7CZ,UAAUa,cAAcC,MAAMN,KAAK,SAAAO,GACjCA,EAAa/K,aAAawK,KAAK,WAC7BZ,OAAOC,SAASmB,aAKpBC,EAAgBZ,EAAON,KAG1BmB,MAAM,WACLC,QAAQC,IACN,mEA/EAC,CAAwBhB,EAAON,GAI/BC,UAAUa,cAAcC,MAAMN,KAAK,WACjCW,QAAQC,IACN,+GAMJH,EAAgBZ,EAAON,MAM/B,SAASkB,EAAgBZ,EAAON,GAC9BC,UAAUa,cACPpB,SAASY,GACTG,KAAK,SAAAO,GACJA,EAAaO,cAAgB,WAC3B,IAAMC,EAAmBR,EAAaS,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvK,QACfgJ,UAAUa,cAAca,YAK1BP,QAAQC,IAAI,6CAGRrB,EAAO4B,UACT5B,EAAO4B,SAASZ,KAMlBI,QAAQC,IAAI,sCAGRrB,EAAO6B,WACT7B,EAAO6B,UAAUb,SAO5BG,MAAM,SAAAW,GACLV,QAAQU,MAAM,4CAA6CA,KA+B1D,SAAS7L,IACV,kBAAmBgK,WACrBA,UAAUa,cAAcC,MAAMN,KAAK,SAAAO,GACjCA,EAAa/K","file":"static/js/main.2a5c06c1.chunk.js","sourcesContent":["// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar React = require(\"react\");\nvar Caml_array = require(\"bs-platform/lib/js/caml_array.js\");\nvar Caml_int32 = require(\"bs-platform/lib/js/caml_int32.js\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\n\nvar setImageSmoothing = function (ctx,v){\n       ctx.mozImageSmoothingEnabled = v;\n       ctx.oImageSmoothingEnabled = v;\n       ctx.webkitImageSmoothingEnabled = v;\n       ctx.msImageSmoothingEnabled = v;\n       ctx.imageSmoothingEnabled = v;\n       };\n\nvar Ctx = /* module */[/* setImageSmoothing */setImageSmoothing];\n\nfunction initImageData(ctx, w, h, f) {\n  var imageData = ctx.createImageData(w, h);\n  var rawData = imageData.data;\n  for(var y = 0 ,y_finish = h - 1 | 0; y <= y_finish; ++y){\n    for(var x = 0 ,x_finish = w - 1 | 0; x <= x_finish; ++x){\n      var offset = Caml_int32.imul(y, (w << 2)) + (x << 2) | 0;\n      var match = Curry._2(f, x, y);\n      Caml_array.caml_array_set(rawData, offset, match[0]);\n      Caml_array.caml_array_set(rawData, offset + 1 | 0, match[1]);\n      Caml_array.caml_array_set(rawData, offset + 2 | 0, match[2]);\n      Caml_array.caml_array_set(rawData, offset + 3 | 0, match[3]);\n    }\n  }\n  return imageData;\n}\n\nvar Util = /* module */[/* initImageData */initImageData];\n\nvar component = ReasonReact.statelessComponent(\"Canvas\");\n\nfunction make(setRef, width, height, _) {\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */component[/* didMount */4],\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */component[/* shouldUpdate */8],\n          /* render */(function () {\n              return React.createElement(\"canvas\", {\n                          ref: setRef,\n                          height: height.toString(),\n                          width: width.toString()\n                        });\n            }),\n          /* initialState */component[/* initialState */10],\n          /* retainedProps */component[/* retainedProps */11],\n          /* reducer */component[/* reducer */12],\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nexports.Ctx = Ctx;\nexports.Util = Util;\nexports.component = component;\nexports.make = make;\n/* component Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar App = require(\"./app\");\nvar ReactDOMRe = require(\"reason-react/src/ReactDOMRe.js\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\nvar ServiceWorker = require(\"./serviceWorker\");\n\n((require('./index.css')));\n\nReactDOMRe.renderToElementWithId(ReasonReact.element(undefined, undefined, App.make(/* array */[])), \"root\");\n\nServiceWorker.unregister();\n\n/*  Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar React = require(\"react\");\nvar XorCanvas = require(\"./XorCanvas\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\n\n((require('./app.css')));\n\nvar component = ReasonReact.statelessComponent(\"App\");\n\nfunction make() {\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */component[/* didMount */4],\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */component[/* shouldUpdate */8],\n          /* render */(function () {\n              return React.createElement(\"div\", {\n                          className: \"App\"\n                        }, ReasonReact.element(undefined, undefined, XorCanvas.make(undefined, undefined, /* array */[])));\n            }),\n          /* initialState */component[/* initialState */10],\n          /* retainedProps */component[/* retainedProps */11],\n          /* reducer */component[/* reducer */12],\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nexports.component = component;\nexports.make = make;\n/*  Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Bits = require(\"./Bits\");\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar React = require(\"react\");\nvar Canvas = require(\"./Canvas\");\nvar Caml_array = require(\"bs-platform/lib/js/caml_array.js\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\nvar Js_primitive = require(\"bs-platform/lib/js/js_primitive.js\");\nvar Belt_MapString = require(\"bs-platform/lib/js/belt_MapString.js\");\nvar Caml_primitive = require(\"bs-platform/lib/js/caml_primitive.js\");\nvar ImageGenerator = require(\"./ImageGenerator\");\n\nfunction addToMap(key, map, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    map[0] = Belt_MapString.set(map[0], key, theRef);\n    return /* () */0;\n  }\n}\n\nfunction setCanvasRef(width, height, theRef, param) {\n  var state = param[/* state */1];\n  state[/* canvasRef */0][0] = (theRef == null) ? undefined : Js_primitive.some(theRef);\n  addToMap(\"self\", state[/* images */1], theRef);\n  var match = state[/* canvasRef */0][0];\n  if (match !== undefined) {\n    var ctx = Js_primitive.valFromOption(match).getContext(\"2d\", {\n          alpha: false\n        });\n    Canvas.Ctx[/* setImageSmoothing */0](ctx, false);\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, width, height);\n    return /* () */0;\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction transformCanvas(f, width, height, canvas) {\n  var ctx = canvas.getContext(\"2d\");\n  var imageData = ctx.getImageData(0, 0, width, height);\n  Curry._1(f, imageData.data);\n  ctx.putImageData(imageData, 0, 0);\n  return /* () */0;\n}\n\nfunction rotate(f, width, height, param, param$1) {\n  var b = param[2];\n  var g = param[1];\n  var r = param[0];\n  var match = param$1[/* state */1][/* canvasRef */0][0];\n  if (match !== undefined) {\n    return transformCanvas((function (rawNew) {\n                  var n = rawNew.length / 4 | 0;\n                  for(var i = 0 ,i_finish = n - 1 | 0; i <= i_finish; ++i){\n                    var offset = (i << 2);\n                    Caml_array.caml_array_set(rawNew, offset, Curry._2(f, Caml_array.caml_array_get(rawNew, offset), r));\n                    Caml_array.caml_array_set(rawNew, offset + 1 | 0, Curry._2(f, Caml_array.caml_array_get(rawNew, offset + 1 | 0), g));\n                    Caml_array.caml_array_set(rawNew, offset + 2 | 0, Curry._2(f, Caml_array.caml_array_get(rawNew, offset + 2 | 0), b));\n                  }\n                  return /* () */0;\n                }), width, height, Js_primitive.valFromOption(match));\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction rotateL(param, param$1, param$2, param$3) {\n  return rotate(Bits.circShiftL, param, param$1, param$2, param$3);\n}\n\nfunction rotateR(param, param$1, param$2, param$3) {\n  return rotate(Bits.circShiftR, param, param$1, param$2, param$3);\n}\n\nvar setHref = function (el,v){el.href = v;};\n\nfunction draw(width, height, imageKey, param) {\n  var state = param[/* state */1];\n  var match = state[/* canvasRef */0][0];\n  var match$1 = Belt_MapString.get(state[/* images */1][0], imageKey);\n  if (match !== undefined && match$1 !== undefined) {\n    var canvas = Js_primitive.valFromOption(match);\n    var ctx = canvas.getContext(\"2d\");\n    var imageData = ctx.getImageData(0, 0, width, height);\n    var rawOld = imageData.data;\n    var n = imageData.data.length / 4 | 0;\n    ctx.drawImage(Js_primitive.valFromOption(match$1), 0, 0, width, height);\n    return transformCanvas((function (rawNew) {\n                  for(var i = 0 ,i_finish = n - 1 | 0; i <= i_finish; ++i){\n                    var offset = (i << 2);\n                    Caml_array.caml_array_set(rawNew, offset, Caml_array.caml_array_get(rawOld, offset) ^ Caml_array.caml_array_get(rawNew, offset));\n                    Caml_array.caml_array_set(rawNew, offset + 1 | 0, Caml_array.caml_array_get(rawOld, offset + 1 | 0) ^ Caml_array.caml_array_get(rawNew, offset + 1 | 0));\n                    Caml_array.caml_array_set(rawNew, offset + 2 | 0, Caml_array.caml_array_get(rawOld, offset + 2 | 0) ^ Caml_array.caml_array_get(rawNew, offset + 2 | 0));\n                    Caml_array.caml_array_set(rawNew, offset + 3 | 0, Caml_primitive.caml_int_max(Caml_array.caml_array_get(rawOld, offset + 3 | 0), Caml_array.caml_array_get(rawNew, offset + 3 | 0)));\n                  }\n                  return /* () */0;\n                }), width, height, canvas);\n  } else {\n    return /* () */0;\n  }\n}\n\nvar component = ReasonReact.statelessComponent(\"Clickable\");\n\nfunction make(render, name, onClick, $staropt$star, $staropt$star$1, _) {\n  var outerStyle = $staropt$star !== undefined ? Js_primitive.valFromOption($staropt$star) : ({\n        height: \"128px\",\n        width: \"128px\"\n      });\n  var innerStyle = $staropt$star$1 !== undefined ? Js_primitive.valFromOption($staropt$star$1) : ({\n        transform: \"scale(0.5)\",\n        transformOrigin: \"top left\"\n      });\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */component[/* didMount */4],\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */component[/* shouldUpdate */8],\n          /* render */(function () {\n              return React.createElement(\"div\", {\n                          style: outerStyle,\n                          onClick: (function () {\n                              return Curry._1(onClick, name);\n                            })\n                        }, React.createElement(\"div\", {\n                              style: innerStyle\n                            }, Curry._1(render, name)));\n            }),\n          /* initialState */component[/* initialState */10],\n          /* retainedProps */component[/* retainedProps */11],\n          /* reducer */component[/* reducer */12],\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nvar Clickable = /* module */[\n  /* component */component,\n  /* make */make\n];\n\nvar component$1 = ReasonReact.reducerComponent(\"XorCanvas\");\n\nfunction make$1($staropt$star, $staropt$star$1, _) {\n  var width = $staropt$star !== undefined ? $staropt$star : 256;\n  var height = $staropt$star$1 !== undefined ? $staropt$star$1 : 256;\n  return /* record */[\n          /* debugName */component$1[/* debugName */0],\n          /* reactClassInternal */component$1[/* reactClassInternal */1],\n          /* handedOffState */component$1[/* handedOffState */2],\n          /* willReceiveProps */component$1[/* willReceiveProps */3],\n          /* didMount */component$1[/* didMount */4],\n          /* didUpdate */component$1[/* didUpdate */5],\n          /* willUnmount */component$1[/* willUnmount */6],\n          /* willUpdate */component$1[/* willUpdate */7],\n          /* shouldUpdate */component$1[/* shouldUpdate */8],\n          /* render */(function (self) {\n              var onClick = function (name) {\n                return draw(width, height, name, self);\n              };\n              return React.createElement(\"div\", undefined, React.createElement(\"div\", {\n                              style: {\n                                display: \"flex\",\n                                left: \"50%\",\n                                position: \"fixed\",\n                                width: \"256px\",\n                                zIndex: \"1\",\n                                flexDirection: \"column\",\n                                justifyContent: \"space-between\",\n                                transform: \"translateX(-50%)\"\n                              }\n                            }, ReasonReact.element(undefined, undefined, make((function () {\n                                        return React.createElement(\"canvas\", {\n                                                    ref: Curry._1(self[/* handle */0], (function (param, param$1) {\n                                                            return setCanvasRef(width, height, param, param$1);\n                                                          })),\n                                                    height: height.toString(),\n                                                    width: width.toString()\n                                                  });\n                                      }), \"self\", onClick, { }, { }, /* array */[])), React.createElement(\"div\", {\n                                  style: {\n                                    display: \"flex\",\n                                    fontSize: \"24px\",\n                                    flexDirection: \"row\",\n                                    justifyContent: \"space-between\"\n                                  }\n                                }, React.createElement(\"button\", {\n                                      style: {\n                                        background: \"black\",\n                                        border: \"1px solid white\",\n                                        color: \"white\",\n                                        fontSize: \"24px\",\n                                        padding: \"0px\",\n                                        textAlign: \"center\",\n                                        width: \"32px\"\n                                      },\n                                      onClick: (function () {\n                                          return rotateL(width, height, /* tuple */[\n                                                      1,\n                                                      1,\n                                                      1\n                                                    ], self);\n                                        })\n                                    }, \"←\"), React.createElement(\"a\", {\n                                      style: {\n                                        background: \"black\",\n                                        border: \"1px solid white\",\n                                        color: \"white\",\n                                        textAlign: \"center\",\n                                        textDecoration: \"none\",\n                                        width: \"32px\"\n                                      },\n                                      download: \"xor-pics.png\",\n                                      onClick: (function (evt) {\n                                          var match = self[/* state */1][/* canvasRef */0][0];\n                                          if (match !== undefined) {\n                                            var el = evt.target;\n                                            var dataURL = Js_primitive.valFromOption(match).toDataURL(\"image/png\");\n                                            return setHref(el, dataURL);\n                                          } else {\n                                            return /* () */0;\n                                          }\n                                        })\n                                    }, \"⭳\"), React.createElement(\"button\", {\n                                      style: {\n                                        background: \"black\",\n                                        border: \"1px solid white\",\n                                        color: \"white\",\n                                        fontSize: \"24px\",\n                                        padding: \"0px\",\n                                        textAlign: \"center\",\n                                        width: \"32px\"\n                                      },\n                                      onClick: (function () {\n                                          return rotateR(width, height, /* tuple */[\n                                                      1,\n                                                      1,\n                                                      1\n                                                    ], self);\n                                        })\n                                    }, \"→\"))), React.createElement(\"div\", {\n                              style: {\n                                position: \"relative\",\n                                top: \"320px\"\n                              }\n                            }, React.createElement(\"div\", {\n                                  style: {\n                                    display: \"flex\",\n                                    flexDirection: \"row\",\n                                    flexWrap: \"wrap\",\n                                    justifyContent: \"center\"\n                                  }\n                                }, ReasonReact.element(undefined, undefined, make((function (name) {\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Img[/* make */1]((function (theRef) {\n                                                              addToMap(name, self[/* state */1][/* images */1], theRef);\n                                                              var match = self[/* state */1][/* canvasRef */0][0];\n                                                              if (match !== undefined && !(theRef == null)) {\n                                                                var ctx = Js_primitive.valFromOption(match).getContext(\"2d\");\n                                                                ctx.drawImage(theRef, 0, 0);\n                                                                return /* () */0;\n                                                              } else {\n                                                                return /* () */0;\n                                                              }\n                                                            }), \"images/logo.png\", width, height, /* array */[]));\n                                          }), \"logo\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            63,\n                                                            63,\n                                                            63\n                                                          ], /* array */[]));\n                                          }), \"gray-25\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            127,\n                                                            127,\n                                                            127\n                                                          ], /* array */[]));\n                                          }), \"gray-50\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            191,\n                                                            191,\n                                                            191\n                                                          ], /* array */[]));\n                                          }), \"gray-75\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            255,\n                                                            255,\n                                                            255\n                                                          ], /* array */[]));\n                                          }), \"white\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Circle[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* record */[\n                                                            /* radius */20,\n                                                            /* color : tuple */[\n                                                              255,\n                                                              255,\n                                                              255\n                                                            ]\n                                                          ], /* array */[]));\n                                          }), \"white-circle\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.XorTexture[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* () */0, /* array */[]));\n                                          }), \"xor-texture\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            191,\n                                                            0,\n                                                            0\n                                                          ], /* array */[]));\n                                          }), \"red\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            0,\n                                                            191,\n                                                            0\n                                                          ], /* array */[]));\n                                          }), \"green\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            0,\n                                                            0,\n                                                            191\n                                                          ], /* array */[]));\n                                          }), \"blue\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.GBGamut[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, 191, /* array */[]));\n                                          }), \"gb\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.RBGamut[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, 191, /* array */[]));\n                                          }), \"rb\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.RGGamut[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, 191, /* array */[]));\n                                          }), \"rg\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.XorFractal[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* () */0, /* array */[]));\n                                          }), \"xor-fractal\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Img[/* make */1]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), \"images/floral_shoppe.jpg\", width, height, /* array */[]));\n                                          }), \"floral\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Img[/* make */1]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), \"images/koko_and_winnie.jpg\", width, height, /* array */[]));\n                                          }), \"cats\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Img[/* make */1]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), \"images/mandrill.png\", width, height, /* array */[]));\n                                          }), \"mandrill\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.PseudoRandom[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, 0, /* array */[]));\n                                          }), \"random-rgb\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Img[/* make */1]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), \"images/koko_and_winnie_hidden.png\", width, height, /* array */[]));\n                                          }), \"cats-concealed\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Img[/* make */1]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), \"images/ich_ruf_zu_dir.png\", width, height, /* array */[]));\n                                          }), \"ich_ruf_zu_dir\", onClick, undefined, undefined, /* array */[])))));\n            }),\n          /* initialState */(function () {\n              return /* record */[\n                      /* canvasRef : record */[/* contents */undefined],\n                      /* images : record */[/* contents */Belt_MapString.empty]\n                    ];\n            }),\n          /* retainedProps */component$1[/* retainedProps */11],\n          /* reducer */(function (_, _$1) {\n              return /* NoUpdate */0;\n            }),\n          /* jsElementWrapped */component$1[/* jsElementWrapped */13]\n        ];\n}\n\nexports.addToMap = addToMap;\nexports.setCanvasRef = setCanvasRef;\nexports.transformCanvas = transformCanvas;\nexports.rotate = rotate;\nexports.rotateL = rotateL;\nexports.rotateR = rotateR;\nexports.setHref = setHref;\nexports.draw = draw;\nexports.Clickable = Clickable;\nexports.component = component$1;\nexports.make = make$1;\n/* component Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\n\nfunction circShiftL(value, count) {\n  var count$1 = count & 7;\n  return (value << count$1) & 255 | (value >>> (-count$1 & 7)) & 255;\n}\n\nfunction circShiftR(value, count) {\n  var count$1 = count & 7;\n  return (value >>> count$1) & 255 | (value << (-count$1 & 7)) & 255;\n}\n\nvar mask = 7;\n\nexports.mask = mask;\nexports.circShiftL = circShiftL;\nexports.circShiftR = circShiftR;\n/* No side effect */\n","// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar React = require(\"react\");\nvar Canvas = require(\"./Canvas\");\nvar Random = require(\"bs-platform/lib/js/random.js\");\nvar Caml_int32 = require(\"bs-platform/lib/js/caml_int32.js\");\nvar Pervasives = require(\"bs-platform/lib/js/pervasives.js\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\n\nfunction Make(ProgrammaticImage) {\n  var f = ProgrammaticImage[0];\n  var draw = function (input, width, height, theRef) {\n    if (theRef == null) {\n      return /* () */0;\n    } else {\n      var ctx = theRef.getContext(\"2d\");\n      var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, Curry._3(f, input, width, height));\n      ctx.putImageData(imageData, 0, 0);\n      return /* () */0;\n    }\n  };\n  var component = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n  var make = function (setRef, width, height, input, _) {\n    return /* record */[\n            /* debugName */component[/* debugName */0],\n            /* reactClassInternal */component[/* reactClassInternal */1],\n            /* handedOffState */component[/* handedOffState */2],\n            /* willReceiveProps */component[/* willReceiveProps */3],\n            /* didMount */component[/* didMount */4],\n            /* didUpdate */component[/* didUpdate */5],\n            /* willUnmount */component[/* willUnmount */6],\n            /* willUpdate */component[/* willUpdate */7],\n            /* shouldUpdate */component[/* shouldUpdate */8],\n            /* render */(function () {\n                return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                  draw(input, width, height, theRef);\n                                  return Curry._1(setRef, theRef);\n                                }), width, height, /* array */[]));\n              }),\n            /* initialState */component[/* initialState */10],\n            /* retainedProps */component[/* retainedProps */11],\n            /* reducer */component[/* reducer */12],\n            /* jsElementWrapped */component[/* jsElementWrapped */13]\n          ];\n  };\n  return /* module */[\n          /* f */f,\n          /* draw */draw,\n          /* component */component,\n          /* make */make\n        ];\n}\n\nvar component = ReasonReact.statelessComponent(\"Img\");\n\nfunction make(setRef, src, width, height, _) {\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */component[/* didMount */4],\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */component[/* shouldUpdate */8],\n          /* render */(function () {\n              return React.createElement(\"img\", {\n                          ref: (function (theRef) {\n                              if (theRef == null) {\n                                return /* () */0;\n                              } else {\n                                theRef.onload = (function () {\n                                    return Curry._1(setRef, theRef);\n                                  });\n                                return /* () */0;\n                              }\n                            }),\n                          height: height.toString(),\n                          src: src,\n                          width: width.toString()\n                        });\n            }),\n          /* initialState */component[/* initialState */10],\n          /* retainedProps */component[/* retainedProps */11],\n          /* reducer */component[/* reducer */12],\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nvar Img = /* module */[\n  /* component */component,\n  /* make */make\n];\n\nvar component$1 = ReasonReact.statelessComponent(\"StaticCanvas\");\n\nfunction make$1(setRef, draw, width, height, _) {\n  return /* record */[\n          /* debugName */component$1[/* debugName */0],\n          /* reactClassInternal */component$1[/* reactClassInternal */1],\n          /* handedOffState */component$1[/* handedOffState */2],\n          /* willReceiveProps */component$1[/* willReceiveProps */3],\n          /* didMount */component$1[/* didMount */4],\n          /* didUpdate */component$1[/* didUpdate */5],\n          /* willUnmount */component$1[/* willUnmount */6],\n          /* willUpdate */component$1[/* willUpdate */7],\n          /* shouldUpdate */component$1[/* shouldUpdate */8],\n          /* render */(function () {\n              return React.createElement(\"canvas\", {\n                          ref: (function (theRef) {\n                              if (theRef == null) {\n                                return /* () */0;\n                              } else {\n                                Curry._3(draw, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }\n                            }),\n                          height: height.toString(),\n                          width: width.toString()\n                        });\n            }),\n          /* initialState */component$1[/* initialState */10],\n          /* retainedProps */component$1[/* retainedProps */11],\n          /* reducer */component$1[/* reducer */12],\n          /* jsElementWrapped */component$1[/* jsElementWrapped */13]\n        ];\n}\n\nvar StaticCanvas = /* module */[\n  /* component */component$1,\n  /* make */make$1\n];\n\nfunction f(param, _, _$1, _$2, _$3) {\n  return /* tuple */[\n          param[0],\n          param[1],\n          param[2],\n          255\n        ];\n}\n\nfunction draw(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$2 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$2(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$2[/* debugName */0],\n          /* reactClassInternal */component$2[/* reactClassInternal */1],\n          /* handedOffState */component$2[/* handedOffState */2],\n          /* willReceiveProps */component$2[/* willReceiveProps */3],\n          /* didMount */component$2[/* didMount */4],\n          /* didUpdate */component$2[/* didUpdate */5],\n          /* willUnmount */component$2[/* willUnmount */6],\n          /* willUpdate */component$2[/* willUpdate */7],\n          /* shouldUpdate */component$2[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$2[/* initialState */10],\n          /* retainedProps */component$2[/* retainedProps */11],\n          /* reducer */component$2[/* reducer */12],\n          /* jsElementWrapped */component$2[/* jsElementWrapped */13]\n        ];\n}\n\nvar Fill = /* module */[\n  /* f */f,\n  /* draw */draw,\n  /* component */component$2,\n  /* make */make$2\n];\n\nfunction f$1(_, _$1, _$2, x, y) {\n  var v = x ^ y;\n  return /* tuple */[\n          v,\n          v,\n          v,\n          255\n        ];\n}\n\nfunction draw$1(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$1(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$3 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$3(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$3[/* debugName */0],\n          /* reactClassInternal */component$3[/* reactClassInternal */1],\n          /* handedOffState */component$3[/* handedOffState */2],\n          /* willReceiveProps */component$3[/* willReceiveProps */3],\n          /* didMount */component$3[/* didMount */4],\n          /* didUpdate */component$3[/* didUpdate */5],\n          /* willUnmount */component$3[/* willUnmount */6],\n          /* willUpdate */component$3[/* willUpdate */7],\n          /* shouldUpdate */component$3[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$1(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$3[/* initialState */10],\n          /* retainedProps */component$3[/* retainedProps */11],\n          /* reducer */component$3[/* reducer */12],\n          /* jsElementWrapped */component$3[/* jsElementWrapped */13]\n        ];\n}\n\nvar XorTexture = /* module */[\n  /* f */f$1,\n  /* draw */draw$1,\n  /* component */component$3,\n  /* make */make$3\n];\n\nfunction f$2(_, _$1, _$2, x, y) {\n  var v = (x ^ y) % 3;\n  if (v > 2 || v < 0) {\n    return /* tuple */[\n            192,\n            192,\n            64,\n            255\n          ];\n  } else {\n    switch (v) {\n      case 0 : \n          return /* tuple */[\n                  64,\n                  192,\n                  192,\n                  255\n                ];\n      case 1 : \n          return /* tuple */[\n                  192,\n                  64,\n                  192,\n                  255\n                ];\n      case 2 : \n          return /* tuple */[\n                  192,\n                  192,\n                  64,\n                  255\n                ];\n      \n    }\n  }\n}\n\nfunction draw$2(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$2(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$4 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$4(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$4[/* debugName */0],\n          /* reactClassInternal */component$4[/* reactClassInternal */1],\n          /* handedOffState */component$4[/* handedOffState */2],\n          /* willReceiveProps */component$4[/* willReceiveProps */3],\n          /* didMount */component$4[/* didMount */4],\n          /* didUpdate */component$4[/* didUpdate */5],\n          /* willUnmount */component$4[/* willUnmount */6],\n          /* willUpdate */component$4[/* willUpdate */7],\n          /* shouldUpdate */component$4[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$2(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$4[/* initialState */10],\n          /* retainedProps */component$4[/* retainedProps */11],\n          /* reducer */component$4[/* reducer */12],\n          /* jsElementWrapped */component$4[/* jsElementWrapped */13]\n        ];\n}\n\nvar XorFractal = /* module */[\n  /* f */f$2,\n  /* draw */draw$2,\n  /* component */component$4,\n  /* make */make$4\n];\n\nfunction f$3(param, width, height, x, y) {\n  var match = param[/* color */1];\n  var radius = param[/* radius */0];\n  var centerX = width / 2 | 0;\n  var centerY = height / 2 | 0;\n  var radiusSquared = Caml_int32.imul(radius, radius);\n  var cX = x - centerX | 0;\n  var cY = y - centerY | 0;\n  var inCircle = Pervasives.abs((Caml_int32.imul(cX, cX) + Caml_int32.imul(cY, cY) | 0) - radiusSquared | 0) < radius;\n  if (inCircle) {\n    return /* tuple */[\n            match[0],\n            match[1],\n            match[2],\n            255\n          ];\n  } else {\n    return /* tuple */[\n            0,\n            0,\n            0,\n            255\n          ];\n  }\n}\n\nfunction draw$3(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$3(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$5 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$5(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$5[/* debugName */0],\n          /* reactClassInternal */component$5[/* reactClassInternal */1],\n          /* handedOffState */component$5[/* handedOffState */2],\n          /* willReceiveProps */component$5[/* willReceiveProps */3],\n          /* didMount */component$5[/* didMount */4],\n          /* didUpdate */component$5[/* didUpdate */5],\n          /* willUnmount */component$5[/* willUnmount */6],\n          /* willUpdate */component$5[/* willUpdate */7],\n          /* shouldUpdate */component$5[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$3(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$5[/* initialState */10],\n          /* retainedProps */component$5[/* retainedProps */11],\n          /* reducer */component$5[/* reducer */12],\n          /* jsElementWrapped */component$5[/* jsElementWrapped */13]\n        ];\n}\n\nvar Circle = /* module */[\n  /* f */f$3,\n  /* draw */draw$3,\n  /* component */component$5,\n  /* make */make$5\n];\n\nfunction f$4(input, _, _$1, x, y) {\n  return /* tuple */[\n          x,\n          y,\n          input,\n          255\n        ];\n}\n\nfunction draw$4(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$4(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$6 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$6(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$6[/* debugName */0],\n          /* reactClassInternal */component$6[/* reactClassInternal */1],\n          /* handedOffState */component$6[/* handedOffState */2],\n          /* willReceiveProps */component$6[/* willReceiveProps */3],\n          /* didMount */component$6[/* didMount */4],\n          /* didUpdate */component$6[/* didUpdate */5],\n          /* willUnmount */component$6[/* willUnmount */6],\n          /* willUpdate */component$6[/* willUpdate */7],\n          /* shouldUpdate */component$6[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$4(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$6[/* initialState */10],\n          /* retainedProps */component$6[/* retainedProps */11],\n          /* reducer */component$6[/* reducer */12],\n          /* jsElementWrapped */component$6[/* jsElementWrapped */13]\n        ];\n}\n\nvar RGGamut = /* module */[\n  /* f */f$4,\n  /* draw */draw$4,\n  /* component */component$6,\n  /* make */make$6\n];\n\nfunction f$5(input, _, _$1, x, y) {\n  return /* tuple */[\n          x,\n          input,\n          y,\n          255\n        ];\n}\n\nfunction draw$5(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$5(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$7 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$7(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$7[/* debugName */0],\n          /* reactClassInternal */component$7[/* reactClassInternal */1],\n          /* handedOffState */component$7[/* handedOffState */2],\n          /* willReceiveProps */component$7[/* willReceiveProps */3],\n          /* didMount */component$7[/* didMount */4],\n          /* didUpdate */component$7[/* didUpdate */5],\n          /* willUnmount */component$7[/* willUnmount */6],\n          /* willUpdate */component$7[/* willUpdate */7],\n          /* shouldUpdate */component$7[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$5(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$7[/* initialState */10],\n          /* retainedProps */component$7[/* retainedProps */11],\n          /* reducer */component$7[/* reducer */12],\n          /* jsElementWrapped */component$7[/* jsElementWrapped */13]\n        ];\n}\n\nvar RBGamut = /* module */[\n  /* f */f$5,\n  /* draw */draw$5,\n  /* component */component$7,\n  /* make */make$7\n];\n\nfunction f$6(input, _, _$1, x, y) {\n  return /* tuple */[\n          input,\n          x,\n          y,\n          255\n        ];\n}\n\nfunction draw$6(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$6(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$8 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$8(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$8[/* debugName */0],\n          /* reactClassInternal */component$8[/* reactClassInternal */1],\n          /* handedOffState */component$8[/* handedOffState */2],\n          /* willReceiveProps */component$8[/* willReceiveProps */3],\n          /* didMount */component$8[/* didMount */4],\n          /* didUpdate */component$8[/* didUpdate */5],\n          /* willUnmount */component$8[/* willUnmount */6],\n          /* willUpdate */component$8[/* willUpdate */7],\n          /* shouldUpdate */component$8[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$6(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$8[/* initialState */10],\n          /* retainedProps */component$8[/* retainedProps */11],\n          /* reducer */component$8[/* reducer */12],\n          /* jsElementWrapped */component$8[/* jsElementWrapped */13]\n        ];\n}\n\nvar GBGamut = /* module */[\n  /* f */f$6,\n  /* draw */draw$6,\n  /* component */component$8,\n  /* make */make$8\n];\n\nfunction f$7(input, _, _$1, x, y) {\n  if (x === 0 && y === 0) {\n    Random.init(input);\n  }\n  return /* tuple */[\n          Random.$$int(256),\n          Random.$$int(256),\n          Random.$$int(256),\n          255\n        ];\n}\n\nfunction draw$7(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$7(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$9 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$9(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$9[/* debugName */0],\n          /* reactClassInternal */component$9[/* reactClassInternal */1],\n          /* handedOffState */component$9[/* handedOffState */2],\n          /* willReceiveProps */component$9[/* willReceiveProps */3],\n          /* didMount */component$9[/* didMount */4],\n          /* didUpdate */component$9[/* didUpdate */5],\n          /* willUnmount */component$9[/* willUnmount */6],\n          /* willUpdate */component$9[/* willUpdate */7],\n          /* shouldUpdate */component$9[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$7(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$9[/* initialState */10],\n          /* retainedProps */component$9[/* retainedProps */11],\n          /* reducer */component$9[/* reducer */12],\n          /* jsElementWrapped */component$9[/* jsElementWrapped */13]\n        ];\n}\n\nvar PseudoRandom = /* module */[\n  /* f */f$7,\n  /* draw */draw$7,\n  /* component */component$9,\n  /* make */make$9\n];\n\nfunction f$8(input, _, _$1, x, y) {\n  if (x === 0 && y === 0) {\n    Random.init(input);\n  }\n  var v = Random.$$int(256);\n  return /* tuple */[\n          v,\n          v,\n          v,\n          255\n        ];\n}\n\nfunction draw$8(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$8(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$10 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$10(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$10[/* debugName */0],\n          /* reactClassInternal */component$10[/* reactClassInternal */1],\n          /* handedOffState */component$10[/* handedOffState */2],\n          /* willReceiveProps */component$10[/* willReceiveProps */3],\n          /* didMount */component$10[/* didMount */4],\n          /* didUpdate */component$10[/* didUpdate */5],\n          /* willUnmount */component$10[/* willUnmount */6],\n          /* willUpdate */component$10[/* willUpdate */7],\n          /* shouldUpdate */component$10[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$8(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$10[/* initialState */10],\n          /* retainedProps */component$10[/* retainedProps */11],\n          /* reducer */component$10[/* reducer */12],\n          /* jsElementWrapped */component$10[/* jsElementWrapped */13]\n        ];\n}\n\nvar PseudoRandomGray = /* module */[\n  /* f */f$8,\n  /* draw */draw$8,\n  /* component */component$10,\n  /* make */make$10\n];\n\nexports.Make = Make;\nexports.Img = Img;\nexports.StaticCanvas = StaticCanvas;\nexports.Fill = Fill;\nexports.XorTexture = XorTexture;\nexports.XorFractal = XorFractal;\nexports.Circle = Circle;\nexports.RGGamut = RGGamut;\nexports.RBGamut = RBGamut;\nexports.GBGamut = GBGamut;\nexports.PseudoRandom = PseudoRandom;\nexports.PseudoRandomGray = PseudoRandomGray;\n/* component Not a pure module */\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}