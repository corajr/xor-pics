{"version":3,"sources":["Canvas.re","index.re","app.re","XorCanvas.re","ImageGenerator.re","serviceWorker.js"],"names":["Curry","__webpack_require__","React","Caml_array","Caml_int32","Ctx","ctx","v","mozImageSmoothingEnabled","oImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","imageSmoothingEnabled","Util","w","h","f","imageData","createImageData","rawData","data","y","y_finish","x","x_finish","offset","imul","match","_2","caml_array_set","component","statelessComponent","exports","make","setRef","width","height","_","createElement","ref","toString","App","ReactDOMRe","ReasonReact","ServiceWorker","renderToElementWithId","element","undefined","unregister","XorCanvas","className","Canvas","Js_primitive","Belt_MapString","Caml_primitive","ImageGenerator","addToMap","key","map","theRef","set","setCanvasRef","param","state","some","valFromOption","getContext","alpha","fillStyle","fillRect","draw","imageKey","match$1","get","getImageData","rawOld","n","length","drawImage","rawNew","i","i_finish","caml_array_get","caml_int_max","putImageData","render","name","onClick","$staropt$star","$staropt$star$1","outerStyle","innerStyle","transform","transformOrigin","style","_1","Clickable","component$1","reducerComponent","self","left","position","zIndex","param$1","border","top","display","flexDirection","flexWrap","justifyContent","Img","partial_arg","Fill","Circle","XorTexture","GBGamut","RBGamut","RGGamut","XorFractal","PseudoRandom","empty","_$1","Random","Pervasives","src","onload","StaticCanvas","_3","_$2","_$3","input","component$2","f$1","draw$1","component$3","f$2","draw$2","component$4","f$3","radius","centerX","centerY","radiusSquared","cX","cY","abs","draw$3","component$5","f$4","draw$4","component$6","f$5","draw$5","component$7","f$6","draw$6","component$8","f$7","init","$$int","draw$7","component$9","f$8","draw$8","component$10","PseudoRandomGray","Make","ProgrammaticImage","r","__webpack_exports__","d","register","isLocalhost","Boolean","window","location","hostname","config","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","then","response","status","headers","indexOf","serviceWorker","ready","registration","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error"],"mappings":"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","file":"static/js/main.27b0d390.chunk.js","sourcesContent":["// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar React = require(\"react\");\nvar Caml_array = require(\"bs-platform/lib/js/caml_array.js\");\nvar Caml_int32 = require(\"bs-platform/lib/js/caml_int32.js\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\n\nvar setImageSmoothing = function (ctx,v){\n       ctx.mozImageSmoothingEnabled = v;\n       ctx.oImageSmoothingEnabled = v;\n       ctx.webkitImageSmoothingEnabled = v;\n       ctx.msImageSmoothingEnabled = v;\n       ctx.imageSmoothingEnabled = v;\n       };\n\nvar Ctx = /* module */[/* setImageSmoothing */setImageSmoothing];\n\nfunction initImageData(ctx, w, h, f) {\n  var imageData = ctx.createImageData(w, h);\n  var rawData = imageData.data;\n  for(var y = 0 ,y_finish = h - 1 | 0; y <= y_finish; ++y){\n    for(var x = 0 ,x_finish = w - 1 | 0; x <= x_finish; ++x){\n      var offset = Caml_int32.imul(y, (w << 2)) + (x << 2) | 0;\n      var match = Curry._2(f, x, y);\n      Caml_array.caml_array_set(rawData, offset, match[0]);\n      Caml_array.caml_array_set(rawData, offset + 1 | 0, match[1]);\n      Caml_array.caml_array_set(rawData, offset + 2 | 0, match[2]);\n      Caml_array.caml_array_set(rawData, offset + 3 | 0, match[3]);\n    }\n  }\n  return imageData;\n}\n\nvar Util = /* module */[/* initImageData */initImageData];\n\nvar component = ReasonReact.statelessComponent(\"Canvas\");\n\nfunction make(setRef, width, height, _) {\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */component[/* didMount */4],\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */component[/* shouldUpdate */8],\n          /* render */(function () {\n              return React.createElement(\"canvas\", {\n                          ref: setRef,\n                          height: height.toString(),\n                          width: width.toString()\n                        });\n            }),\n          /* initialState */component[/* initialState */10],\n          /* retainedProps */component[/* retainedProps */11],\n          /* reducer */component[/* reducer */12],\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nexports.Ctx = Ctx;\nexports.Util = Util;\nexports.component = component;\nexports.make = make;\n/* component Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar App = require(\"./app\");\nvar ReactDOMRe = require(\"reason-react/src/ReactDOMRe.js\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\nvar ServiceWorker = require(\"./serviceWorker\");\n\n((require('./index.css')));\n\nReactDOMRe.renderToElementWithId(ReasonReact.element(undefined, undefined, App.make(/* array */[])), \"root\");\n\nServiceWorker.unregister();\n\n/*  Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar React = require(\"react\");\nvar XorCanvas = require(\"./XorCanvas\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\n\n((require('./app.css')));\n\nvar component = ReasonReact.statelessComponent(\"App\");\n\nfunction make() {\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */component[/* didMount */4],\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */component[/* shouldUpdate */8],\n          /* render */(function () {\n              return React.createElement(\"div\", {\n                          className: \"App\"\n                        }, ReasonReact.element(undefined, undefined, XorCanvas.make(undefined, undefined, /* array */[])));\n            }),\n          /* initialState */component[/* initialState */10],\n          /* retainedProps */component[/* retainedProps */11],\n          /* reducer */component[/* reducer */12],\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nexports.component = component;\nexports.make = make;\n/*  Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar React = require(\"react\");\nvar Canvas = require(\"./Canvas\");\nvar Caml_array = require(\"bs-platform/lib/js/caml_array.js\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\nvar Js_primitive = require(\"bs-platform/lib/js/js_primitive.js\");\nvar Belt_MapString = require(\"bs-platform/lib/js/belt_MapString.js\");\nvar Caml_primitive = require(\"bs-platform/lib/js/caml_primitive.js\");\nvar ImageGenerator = require(\"./ImageGenerator\");\n\nfunction addToMap(key, map, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    map[0] = Belt_MapString.set(map[0], key, theRef);\n    return /* () */0;\n  }\n}\n\nfunction setCanvasRef(width, height, theRef, param) {\n  var state = param[/* state */1];\n  state[/* canvasRef */0][0] = (theRef == null) ? undefined : Js_primitive.some(theRef);\n  addToMap(\"self\", state[/* images */1], theRef);\n  var match = state[/* canvasRef */0][0];\n  if (match !== undefined) {\n    var ctx = Js_primitive.valFromOption(match).getContext(\"2d\", {\n          alpha: false\n        });\n    Canvas.Ctx[/* setImageSmoothing */0](ctx, false);\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, width, height);\n    return /* () */0;\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction draw(width, height, imageKey, param) {\n  var state = param[/* state */1];\n  var match = state[/* canvasRef */0][0];\n  var match$1 = Belt_MapString.get(state[/* images */1][0], imageKey);\n  if (match !== undefined && match$1 !== undefined) {\n    var ctx = Js_primitive.valFromOption(match).getContext(\"2d\");\n    var imageData = ctx.getImageData(0, 0, width, height);\n    var rawOld = imageData.data;\n    var n = imageData.data.length / 4 | 0;\n    ctx.drawImage(Js_primitive.valFromOption(match$1), 0, 0, width, height);\n    var newImageData = ctx.getImageData(0, 0, width, height);\n    var rawNew = newImageData.data;\n    for(var i = 0 ,i_finish = n - 1 | 0; i <= i_finish; ++i){\n      var offset = (i << 2);\n      Caml_array.caml_array_set(rawOld, offset, Caml_array.caml_array_get(rawOld, offset) ^ Caml_array.caml_array_get(rawNew, offset));\n      Caml_array.caml_array_set(rawOld, offset + 1 | 0, Caml_array.caml_array_get(rawOld, offset + 1 | 0) ^ Caml_array.caml_array_get(rawNew, offset + 1 | 0));\n      Caml_array.caml_array_set(rawOld, offset + 2 | 0, Caml_array.caml_array_get(rawOld, offset + 2 | 0) ^ Caml_array.caml_array_get(rawNew, offset + 2 | 0));\n      Caml_array.caml_array_set(rawOld, offset + 3 | 0, Caml_primitive.caml_int_max(Caml_array.caml_array_get(rawOld, offset + 3 | 0), Caml_array.caml_array_get(rawNew, offset + 3 | 0)));\n    }\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  } else {\n    return /* () */0;\n  }\n}\n\nvar component = ReasonReact.statelessComponent(\"Clickable\");\n\nfunction make(render, name, onClick, $staropt$star, $staropt$star$1, _) {\n  var outerStyle = $staropt$star !== undefined ? Js_primitive.valFromOption($staropt$star) : ({\n        height: \"128px\",\n        width: \"128px\"\n      });\n  var innerStyle = $staropt$star$1 !== undefined ? Js_primitive.valFromOption($staropt$star$1) : ({\n        transform: \"scale(0.5)\",\n        transformOrigin: \"top left\"\n      });\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */component[/* didMount */4],\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */component[/* shouldUpdate */8],\n          /* render */(function () {\n              return React.createElement(\"div\", {\n                          style: outerStyle,\n                          onClick: (function () {\n                              return Curry._1(onClick, name);\n                            })\n                        }, React.createElement(\"div\", {\n                              style: innerStyle\n                            }, Curry._1(render, name)));\n            }),\n          /* initialState */component[/* initialState */10],\n          /* retainedProps */component[/* retainedProps */11],\n          /* reducer */component[/* reducer */12],\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nvar Clickable = /* module */[\n  /* component */component,\n  /* make */make\n];\n\nvar component$1 = ReasonReact.reducerComponent(\"XorCanvas\");\n\nfunction make$1($staropt$star, $staropt$star$1, _) {\n  var width = $staropt$star !== undefined ? $staropt$star : 256;\n  var height = $staropt$star$1 !== undefined ? $staropt$star$1 : 256;\n  return /* record */[\n          /* debugName */component$1[/* debugName */0],\n          /* reactClassInternal */component$1[/* reactClassInternal */1],\n          /* handedOffState */component$1[/* handedOffState */2],\n          /* willReceiveProps */component$1[/* willReceiveProps */3],\n          /* didMount */component$1[/* didMount */4],\n          /* didUpdate */component$1[/* didUpdate */5],\n          /* willUnmount */component$1[/* willUnmount */6],\n          /* willUpdate */component$1[/* willUpdate */7],\n          /* shouldUpdate */component$1[/* shouldUpdate */8],\n          /* render */(function (self) {\n              var onClick = function (name) {\n                return draw(width, height, name, self);\n              };\n              return React.createElement(\"div\", undefined, React.createElement(\"div\", {\n                              style: {\n                                left: \"50%\",\n                                position: \"fixed\",\n                                width: \"256px\",\n                                zIndex: \"1\",\n                                transform: \"translateX(-50%)\"\n                              }\n                            }, ReasonReact.element(undefined, undefined, make((function () {\n                                        return React.createElement(\"canvas\", {\n                                                    ref: Curry._1(self[/* handle */0], (function (param, param$1) {\n                                                            return setCanvasRef(width, height, param, param$1);\n                                                          })),\n                                                    style: {\n                                                      border: \"1px solid black\"\n                                                    },\n                                                    height: height.toString(),\n                                                    width: width.toString()\n                                                  });\n                                      }), \"self\", onClick, { }, { }, /* array */[]))), React.createElement(\"div\", {\n                              style: {\n                                position: \"relative\",\n                                top: \"288px\"\n                              }\n                            }, React.createElement(\"div\", {\n                                  style: {\n                                    display: \"flex\",\n                                    flexDirection: \"row\",\n                                    flexWrap: \"wrap\",\n                                    justifyContent: \"center\"\n                                  }\n                                }, ReasonReact.element(undefined, undefined, make((function (name) {\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Img[/* make */1]((function (theRef) {\n                                                              addToMap(name, self[/* state */1][/* images */1], theRef);\n                                                              var match = self[/* state */1][/* canvasRef */0][0];\n                                                              if (match !== undefined && !(theRef == null)) {\n                                                                var ctx = Js_primitive.valFromOption(match).getContext(\"2d\");\n                                                                ctx.drawImage(theRef, 0, 0);\n                                                                return /* () */0;\n                                                              } else {\n                                                                return /* () */0;\n                                                              }\n                                                            }), \"images/logo.png\", width, height, /* array */[]));\n                                          }), \"logo\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            63,\n                                                            63,\n                                                            63\n                                                          ], /* array */[]));\n                                          }), \"gray-25\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            127,\n                                                            127,\n                                                            127\n                                                          ], /* array */[]));\n                                          }), \"gray-50\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            191,\n                                                            191,\n                                                            191\n                                                          ], /* array */[]));\n                                          }), \"gray-75\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            255,\n                                                            255,\n                                                            255\n                                                          ], /* array */[]));\n                                          }), \"white\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Circle[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* record */[\n                                                            /* radius */20,\n                                                            /* color : tuple */[\n                                                              255,\n                                                              255,\n                                                              255\n                                                            ]\n                                                          ], /* array */[]));\n                                          }), \"white-circle\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.XorTexture[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* () */0, /* array */[]));\n                                          }), \"xor-texture\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            191,\n                                                            0,\n                                                            0\n                                                          ], /* array */[]));\n                                          }), \"red\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            0,\n                                                            191,\n                                                            0\n                                                          ], /* array */[]));\n                                          }), \"green\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Fill[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* tuple */[\n                                                            0,\n                                                            0,\n                                                            191\n                                                          ], /* array */[]));\n                                          }), \"blue\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.GBGamut[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, 191, /* array */[]));\n                                          }), \"gb\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.RBGamut[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, 191, /* array */[]));\n                                          }), \"rb\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.RGGamut[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, 191, /* array */[]));\n                                          }), \"rg\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.XorFractal[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, /* () */0, /* array */[]));\n                                          }), \"xor-fractal\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Img[/* make */1]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), \"images/floral_shoppe.jpg\", width, height, /* array */[]));\n                                          }), \"floral\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Img[/* make */1]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), \"images/koko_and_winnie.jpg\", width, height, /* array */[]));\n                                          }), \"cats\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Img[/* make */1]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), \"images/mandrill.png\", width, height, /* array */[]));\n                                          }), \"mandrill\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.PseudoRandom[/* make */3]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), width, height, 0, /* array */[]));\n                                          }), \"random-rgb\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Img[/* make */1]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), \"images/koko_and_winnie_hidden.png\", width, height, /* array */[]));\n                                          }), \"cats-concealed\", onClick, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, make((function (name) {\n                                            var partial_arg = self[/* state */1][/* images */1];\n                                            return ReasonReact.element(undefined, undefined, ImageGenerator.Img[/* make */1]((function (param) {\n                                                              return addToMap(name, partial_arg, param);\n                                                            }), \"images/ich_ruf_zu_dir.png\", width, height, /* array */[]));\n                                          }), \"ich_ruf_zu_dir\", onClick, undefined, undefined, /* array */[])))));\n            }),\n          /* initialState */(function () {\n              return /* record */[\n                      /* canvasRef : record */[/* contents */undefined],\n                      /* images : record */[/* contents */Belt_MapString.empty]\n                    ];\n            }),\n          /* retainedProps */component$1[/* retainedProps */11],\n          /* reducer */(function (_, _$1) {\n              return /* NoUpdate */0;\n            }),\n          /* jsElementWrapped */component$1[/* jsElementWrapped */13]\n        ];\n}\n\nexports.addToMap = addToMap;\nexports.setCanvasRef = setCanvasRef;\nexports.draw = draw;\nexports.Clickable = Clickable;\nexports.component = component$1;\nexports.make = make$1;\n/* component Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar React = require(\"react\");\nvar Canvas = require(\"./Canvas\");\nvar Random = require(\"bs-platform/lib/js/random.js\");\nvar Caml_int32 = require(\"bs-platform/lib/js/caml_int32.js\");\nvar Pervasives = require(\"bs-platform/lib/js/pervasives.js\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\n\nfunction Make(ProgrammaticImage) {\n  var f = ProgrammaticImage[0];\n  var draw = function (input, width, height, theRef) {\n    if (theRef == null) {\n      return /* () */0;\n    } else {\n      var ctx = theRef.getContext(\"2d\");\n      var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, Curry._3(f, input, width, height));\n      ctx.putImageData(imageData, 0, 0);\n      return /* () */0;\n    }\n  };\n  var component = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n  var make = function (setRef, width, height, input, _) {\n    return /* record */[\n            /* debugName */component[/* debugName */0],\n            /* reactClassInternal */component[/* reactClassInternal */1],\n            /* handedOffState */component[/* handedOffState */2],\n            /* willReceiveProps */component[/* willReceiveProps */3],\n            /* didMount */component[/* didMount */4],\n            /* didUpdate */component[/* didUpdate */5],\n            /* willUnmount */component[/* willUnmount */6],\n            /* willUpdate */component[/* willUpdate */7],\n            /* shouldUpdate */component[/* shouldUpdate */8],\n            /* render */(function () {\n                return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                  draw(input, width, height, theRef);\n                                  return Curry._1(setRef, theRef);\n                                }), width, height, /* array */[]));\n              }),\n            /* initialState */component[/* initialState */10],\n            /* retainedProps */component[/* retainedProps */11],\n            /* reducer */component[/* reducer */12],\n            /* jsElementWrapped */component[/* jsElementWrapped */13]\n          ];\n  };\n  return /* module */[\n          /* f */f,\n          /* draw */draw,\n          /* component */component,\n          /* make */make\n        ];\n}\n\nvar component = ReasonReact.statelessComponent(\"Img\");\n\nfunction make(setRef, src, width, height, _) {\n  return /* record */[\n          /* debugName */component[/* debugName */0],\n          /* reactClassInternal */component[/* reactClassInternal */1],\n          /* handedOffState */component[/* handedOffState */2],\n          /* willReceiveProps */component[/* willReceiveProps */3],\n          /* didMount */component[/* didMount */4],\n          /* didUpdate */component[/* didUpdate */5],\n          /* willUnmount */component[/* willUnmount */6],\n          /* willUpdate */component[/* willUpdate */7],\n          /* shouldUpdate */component[/* shouldUpdate */8],\n          /* render */(function () {\n              return React.createElement(\"img\", {\n                          ref: (function (theRef) {\n                              if (theRef == null) {\n                                return /* () */0;\n                              } else {\n                                theRef.onload = (function () {\n                                    return Curry._1(setRef, theRef);\n                                  });\n                                return /* () */0;\n                              }\n                            }),\n                          height: height.toString(),\n                          src: src,\n                          width: width.toString()\n                        });\n            }),\n          /* initialState */component[/* initialState */10],\n          /* retainedProps */component[/* retainedProps */11],\n          /* reducer */component[/* reducer */12],\n          /* jsElementWrapped */component[/* jsElementWrapped */13]\n        ];\n}\n\nvar Img = /* module */[\n  /* component */component,\n  /* make */make\n];\n\nvar component$1 = ReasonReact.statelessComponent(\"StaticCanvas\");\n\nfunction make$1(setRef, draw, width, height, _) {\n  return /* record */[\n          /* debugName */component$1[/* debugName */0],\n          /* reactClassInternal */component$1[/* reactClassInternal */1],\n          /* handedOffState */component$1[/* handedOffState */2],\n          /* willReceiveProps */component$1[/* willReceiveProps */3],\n          /* didMount */component$1[/* didMount */4],\n          /* didUpdate */component$1[/* didUpdate */5],\n          /* willUnmount */component$1[/* willUnmount */6],\n          /* willUpdate */component$1[/* willUpdate */7],\n          /* shouldUpdate */component$1[/* shouldUpdate */8],\n          /* render */(function () {\n              return React.createElement(\"canvas\", {\n                          ref: (function (theRef) {\n                              if (theRef == null) {\n                                return /* () */0;\n                              } else {\n                                Curry._3(draw, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }\n                            }),\n                          height: height.toString(),\n                          width: width.toString()\n                        });\n            }),\n          /* initialState */component$1[/* initialState */10],\n          /* retainedProps */component$1[/* retainedProps */11],\n          /* reducer */component$1[/* reducer */12],\n          /* jsElementWrapped */component$1[/* jsElementWrapped */13]\n        ];\n}\n\nvar StaticCanvas = /* module */[\n  /* component */component$1,\n  /* make */make$1\n];\n\nfunction f(param, _, _$1, _$2, _$3) {\n  return /* tuple */[\n          param[0],\n          param[1],\n          param[2],\n          255\n        ];\n}\n\nfunction draw(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$2 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$2(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$2[/* debugName */0],\n          /* reactClassInternal */component$2[/* reactClassInternal */1],\n          /* handedOffState */component$2[/* handedOffState */2],\n          /* willReceiveProps */component$2[/* willReceiveProps */3],\n          /* didMount */component$2[/* didMount */4],\n          /* didUpdate */component$2[/* didUpdate */5],\n          /* willUnmount */component$2[/* willUnmount */6],\n          /* willUpdate */component$2[/* willUpdate */7],\n          /* shouldUpdate */component$2[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$2[/* initialState */10],\n          /* retainedProps */component$2[/* retainedProps */11],\n          /* reducer */component$2[/* reducer */12],\n          /* jsElementWrapped */component$2[/* jsElementWrapped */13]\n        ];\n}\n\nvar Fill = /* module */[\n  /* f */f,\n  /* draw */draw,\n  /* component */component$2,\n  /* make */make$2\n];\n\nfunction f$1(_, _$1, _$2, x, y) {\n  var v = x ^ y;\n  return /* tuple */[\n          v,\n          v,\n          v,\n          255\n        ];\n}\n\nfunction draw$1(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$1(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$3 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$3(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$3[/* debugName */0],\n          /* reactClassInternal */component$3[/* reactClassInternal */1],\n          /* handedOffState */component$3[/* handedOffState */2],\n          /* willReceiveProps */component$3[/* willReceiveProps */3],\n          /* didMount */component$3[/* didMount */4],\n          /* didUpdate */component$3[/* didUpdate */5],\n          /* willUnmount */component$3[/* willUnmount */6],\n          /* willUpdate */component$3[/* willUpdate */7],\n          /* shouldUpdate */component$3[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$1(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$3[/* initialState */10],\n          /* retainedProps */component$3[/* retainedProps */11],\n          /* reducer */component$3[/* reducer */12],\n          /* jsElementWrapped */component$3[/* jsElementWrapped */13]\n        ];\n}\n\nvar XorTexture = /* module */[\n  /* f */f$1,\n  /* draw */draw$1,\n  /* component */component$3,\n  /* make */make$3\n];\n\nfunction f$2(_, _$1, _$2, x, y) {\n  var v = (x ^ y) % 3;\n  if (v > 2 || v < 0) {\n    return /* tuple */[\n            192,\n            192,\n            64,\n            255\n          ];\n  } else {\n    switch (v) {\n      case 0 : \n          return /* tuple */[\n                  64,\n                  192,\n                  192,\n                  255\n                ];\n      case 1 : \n          return /* tuple */[\n                  192,\n                  64,\n                  192,\n                  255\n                ];\n      case 2 : \n          return /* tuple */[\n                  192,\n                  192,\n                  64,\n                  255\n                ];\n      \n    }\n  }\n}\n\nfunction draw$2(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$2(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$4 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$4(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$4[/* debugName */0],\n          /* reactClassInternal */component$4[/* reactClassInternal */1],\n          /* handedOffState */component$4[/* handedOffState */2],\n          /* willReceiveProps */component$4[/* willReceiveProps */3],\n          /* didMount */component$4[/* didMount */4],\n          /* didUpdate */component$4[/* didUpdate */5],\n          /* willUnmount */component$4[/* willUnmount */6],\n          /* willUpdate */component$4[/* willUpdate */7],\n          /* shouldUpdate */component$4[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$2(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$4[/* initialState */10],\n          /* retainedProps */component$4[/* retainedProps */11],\n          /* reducer */component$4[/* reducer */12],\n          /* jsElementWrapped */component$4[/* jsElementWrapped */13]\n        ];\n}\n\nvar XorFractal = /* module */[\n  /* f */f$2,\n  /* draw */draw$2,\n  /* component */component$4,\n  /* make */make$4\n];\n\nfunction f$3(param, width, height, x, y) {\n  var match = param[/* color */1];\n  var radius = param[/* radius */0];\n  var centerX = width / 2 | 0;\n  var centerY = height / 2 | 0;\n  var radiusSquared = Caml_int32.imul(radius, radius);\n  var cX = x - centerX | 0;\n  var cY = y - centerY | 0;\n  var inCircle = Pervasives.abs((Caml_int32.imul(cX, cX) + Caml_int32.imul(cY, cY) | 0) - radiusSquared | 0) < radius;\n  if (inCircle) {\n    return /* tuple */[\n            match[0],\n            match[1],\n            match[2],\n            255\n          ];\n  } else {\n    return /* tuple */[\n            0,\n            0,\n            0,\n            255\n          ];\n  }\n}\n\nfunction draw$3(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$3(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$5 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$5(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$5[/* debugName */0],\n          /* reactClassInternal */component$5[/* reactClassInternal */1],\n          /* handedOffState */component$5[/* handedOffState */2],\n          /* willReceiveProps */component$5[/* willReceiveProps */3],\n          /* didMount */component$5[/* didMount */4],\n          /* didUpdate */component$5[/* didUpdate */5],\n          /* willUnmount */component$5[/* willUnmount */6],\n          /* willUpdate */component$5[/* willUpdate */7],\n          /* shouldUpdate */component$5[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$3(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$5[/* initialState */10],\n          /* retainedProps */component$5[/* retainedProps */11],\n          /* reducer */component$5[/* reducer */12],\n          /* jsElementWrapped */component$5[/* jsElementWrapped */13]\n        ];\n}\n\nvar Circle = /* module */[\n  /* f */f$3,\n  /* draw */draw$3,\n  /* component */component$5,\n  /* make */make$5\n];\n\nfunction f$4(input, _, _$1, x, y) {\n  return /* tuple */[\n          x,\n          y,\n          input,\n          255\n        ];\n}\n\nfunction draw$4(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$4(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$6 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$6(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$6[/* debugName */0],\n          /* reactClassInternal */component$6[/* reactClassInternal */1],\n          /* handedOffState */component$6[/* handedOffState */2],\n          /* willReceiveProps */component$6[/* willReceiveProps */3],\n          /* didMount */component$6[/* didMount */4],\n          /* didUpdate */component$6[/* didUpdate */5],\n          /* willUnmount */component$6[/* willUnmount */6],\n          /* willUpdate */component$6[/* willUpdate */7],\n          /* shouldUpdate */component$6[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$4(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$6[/* initialState */10],\n          /* retainedProps */component$6[/* retainedProps */11],\n          /* reducer */component$6[/* reducer */12],\n          /* jsElementWrapped */component$6[/* jsElementWrapped */13]\n        ];\n}\n\nvar RGGamut = /* module */[\n  /* f */f$4,\n  /* draw */draw$4,\n  /* component */component$6,\n  /* make */make$6\n];\n\nfunction f$5(input, _, _$1, x, y) {\n  return /* tuple */[\n          x,\n          input,\n          y,\n          255\n        ];\n}\n\nfunction draw$5(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$5(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$7 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$7(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$7[/* debugName */0],\n          /* reactClassInternal */component$7[/* reactClassInternal */1],\n          /* handedOffState */component$7[/* handedOffState */2],\n          /* willReceiveProps */component$7[/* willReceiveProps */3],\n          /* didMount */component$7[/* didMount */4],\n          /* didUpdate */component$7[/* didUpdate */5],\n          /* willUnmount */component$7[/* willUnmount */6],\n          /* willUpdate */component$7[/* willUpdate */7],\n          /* shouldUpdate */component$7[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$5(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$7[/* initialState */10],\n          /* retainedProps */component$7[/* retainedProps */11],\n          /* reducer */component$7[/* reducer */12],\n          /* jsElementWrapped */component$7[/* jsElementWrapped */13]\n        ];\n}\n\nvar RBGamut = /* module */[\n  /* f */f$5,\n  /* draw */draw$5,\n  /* component */component$7,\n  /* make */make$7\n];\n\nfunction f$6(input, _, _$1, x, y) {\n  return /* tuple */[\n          input,\n          x,\n          y,\n          255\n        ];\n}\n\nfunction draw$6(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$6(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$8 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$8(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$8[/* debugName */0],\n          /* reactClassInternal */component$8[/* reactClassInternal */1],\n          /* handedOffState */component$8[/* handedOffState */2],\n          /* willReceiveProps */component$8[/* willReceiveProps */3],\n          /* didMount */component$8[/* didMount */4],\n          /* didUpdate */component$8[/* didUpdate */5],\n          /* willUnmount */component$8[/* willUnmount */6],\n          /* willUpdate */component$8[/* willUpdate */7],\n          /* shouldUpdate */component$8[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$6(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$8[/* initialState */10],\n          /* retainedProps */component$8[/* retainedProps */11],\n          /* reducer */component$8[/* reducer */12],\n          /* jsElementWrapped */component$8[/* jsElementWrapped */13]\n        ];\n}\n\nvar GBGamut = /* module */[\n  /* f */f$6,\n  /* draw */draw$6,\n  /* component */component$8,\n  /* make */make$8\n];\n\nfunction f$7(input, _, _$1, x, y) {\n  if (x === 0 && y === 0) {\n    Random.init(input);\n  }\n  return /* tuple */[\n          Random.$$int(256),\n          Random.$$int(256),\n          Random.$$int(256),\n          255\n        ];\n}\n\nfunction draw$7(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$7(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$9 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$9(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$9[/* debugName */0],\n          /* reactClassInternal */component$9[/* reactClassInternal */1],\n          /* handedOffState */component$9[/* handedOffState */2],\n          /* willReceiveProps */component$9[/* willReceiveProps */3],\n          /* didMount */component$9[/* didMount */4],\n          /* didUpdate */component$9[/* didUpdate */5],\n          /* willUnmount */component$9[/* willUnmount */6],\n          /* willUpdate */component$9[/* willUpdate */7],\n          /* shouldUpdate */component$9[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$7(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$9[/* initialState */10],\n          /* retainedProps */component$9[/* retainedProps */11],\n          /* reducer */component$9[/* reducer */12],\n          /* jsElementWrapped */component$9[/* jsElementWrapped */13]\n        ];\n}\n\nvar PseudoRandom = /* module */[\n  /* f */f$7,\n  /* draw */draw$7,\n  /* component */component$9,\n  /* make */make$9\n];\n\nfunction f$8(input, _, _$1, x, y) {\n  if (x === 0 && y === 0) {\n    Random.init(input);\n  }\n  var v = Random.$$int(256);\n  return /* tuple */[\n          v,\n          v,\n          v,\n          255\n        ];\n}\n\nfunction draw$8(input, width, height, theRef) {\n  if (theRef == null) {\n    return /* () */0;\n  } else {\n    var ctx = theRef.getContext(\"2d\");\n    var imageData = Canvas.Util[/* initImageData */0](ctx, width, height, (function (param, param$1) {\n            return f$8(input, width, height, param, param$1);\n          }));\n    ctx.putImageData(imageData, 0, 0);\n    return /* () */0;\n  }\n}\n\nvar component$10 = ReasonReact.statelessComponent(\"ProgrammaticImage\");\n\nfunction make$10(setRef, width, height, input, _) {\n  return /* record */[\n          /* debugName */component$10[/* debugName */0],\n          /* reactClassInternal */component$10[/* reactClassInternal */1],\n          /* handedOffState */component$10[/* handedOffState */2],\n          /* willReceiveProps */component$10[/* willReceiveProps */3],\n          /* didMount */component$10[/* didMount */4],\n          /* didUpdate */component$10[/* didUpdate */5],\n          /* willUnmount */component$10[/* willUnmount */6],\n          /* willUpdate */component$10[/* willUpdate */7],\n          /* shouldUpdate */component$10[/* shouldUpdate */8],\n          /* render */(function () {\n              return ReasonReact.element(undefined, undefined, Canvas.make((function (theRef) {\n                                draw$8(input, width, height, theRef);\n                                return Curry._1(setRef, theRef);\n                              }), width, height, /* array */[]));\n            }),\n          /* initialState */component$10[/* initialState */10],\n          /* retainedProps */component$10[/* retainedProps */11],\n          /* reducer */component$10[/* reducer */12],\n          /* jsElementWrapped */component$10[/* jsElementWrapped */13]\n        ];\n}\n\nvar PseudoRandomGray = /* module */[\n  /* f */f$8,\n  /* draw */draw$8,\n  /* component */component$10,\n  /* make */make$10\n];\n\nexports.Make = Make;\nexports.Img = Img;\nexports.StaticCanvas = StaticCanvas;\nexports.Fill = Fill;\nexports.XorTexture = XorTexture;\nexports.XorFractal = XorFractal;\nexports.Circle = Circle;\nexports.RGGamut = RGGamut;\nexports.RBGamut = RBGamut;\nexports.GBGamut = GBGamut;\nexports.PseudoRandom = PseudoRandom;\nexports.PseudoRandomGray = PseudoRandomGray;\n/* component Not a pure module */\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}